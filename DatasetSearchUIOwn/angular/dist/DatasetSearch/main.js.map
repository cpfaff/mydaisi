{"version":3,"file":"main.js","mappings":"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":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/basket-dialog/basket-dialog.component.ts","./src/app/basket-dialog/basket-dialog.component.html","./src/app/citation/citation.component.ts","./src/app/citation/citation.component.html","./src/app/context-box/context-box.component.ts","./src/app/context-box/context-box.component.html","./src/app/filters/filter-box/filter-box.component.ts","./src/app/filters/filter-box/filter-box.component.html","./src/app/filters/filter-date-picker/filter-date-picker.component.ts","./src/app/filters/filter-date-picker/filter-date-picker.component.html","./src/app/filters/filters.component.ts","./src/app/filters/filters.component.html","./src/app/filters/other-filters/other-filters.component.ts","./src/app/filters/other-filters/other-filters.component.html","./src/app/gfbio/gfbio.component.ts","./src/app/gfbio/gfbio.component.html","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/material-module.ts","./src/app/models/basket.ts","./src/app/models/result/aggregation.ts","./src/app/models/result/citation.ts","./src/app/models/result/description.ts","./src/app/models/result/facet.ts","./src/app/models/result/hit.ts","./src/app/models/result/linkage.ts","./src/app/models/result/result.ts","./src/app/models/result/upperLabel.ts","./src/app/pagination/pagination.component.ts","./src/app/pagination/pagination.component.html","./src/app/search-input/search-input.component.ts","./src/app/search-input/search-input.component.html","./src/app/search-result/description/description.component.ts","./src/app/search-result/description/description.component.html","./src/app/search-result/result-item/result-item.component.ts","./src/app/search-result/result-item/result-item.component.html","./src/app/search-result/search-result.component.ts","./src/app/search-result/search-result.component.html","./src/app/services/local/communication.service.ts","./src/app/services/local/gfbio-preprocess-data.service.ts","./src/app/services/local/input-analysis.service.ts","./src/app/services/local/start-searching.service.ts","./src/app/services/remote/node.service.ts","./src/app/suggestion-window/suggestion-window.component.ts","./src/app/suggestion-window/suggestion-window.component.html","./src/app/utils/app.init.ts","./src/environments/environment.ts","./src/environments/gfbio.environment.ts","./src/main.ts","/home/ctpfaff/Schreibtisch/search.gfbio.org/DatasetSearchUIOwn/angular/node_modules/moment/locale|sync|/^\\.\\/.*$/"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {GfbioComponent} from './gfbio/gfbio.component';\nimport { AuthGuard } from './guards/auth.guard';\n//import {BioDivComponent} from './bio-div/bio-div.component';\n\nconst routes: Routes = [\n  // { path: '', component: GfbioComponent, canActivate: [AuthGuard] },\n  { path: '', component: GfbioComponent }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit } from '@angular/core';\nimport 'reflect-metadata';\nimport {KeycloakService} from 'keycloak-angular';\nimport { KeycloakProfile } from 'keycloak-js';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n    public isLoggedIn = false;\n    public userProfile: KeycloakProfile | null = null;\n\n    user = '';\n\n    indexes = [\n        {\n            key: 'gfbio',\n            link: '/'\n        }\n        /*, {\n                    key: 'biodiv',\n                    link: '/bio-div'\n                }*/\n    ];\n\n    constructor(private keycloakService: KeycloakService) {\n    }\n\n    private initializeUserOptions(): void {\n        try{\n            this.user = this.keycloakService.getUsername();\n            this.keycloakService.loadUserProfile().then(profile => {\n                console.log(profile.username);\n                console.log(profile['attributes']); //gives you array of all attributes of user, extract what you need\n            });\n        }catch{\n            this.user = null;\n        }\n        \n    }\n\n    public async ngOnInit() {\n        this.initializeUserOptions();\n\n        if (await this.keycloakService.isLoggedIn()) {\n            this.userProfile = await this.keycloakService.loadUserProfile();\n          }\n\n        // this.isLoggedIn = await this.keycloakService.isLoggedIn();\n\n        // if (this.isLoggedIn) {\n        //     this.userProfile = await this.keycloakService.loadUserProfile();\n        //     console.log(this.userProfile);\n        // }\n    }\n\n    public login() {\n        this.keycloakService.login();\n      }\n    \n    public logout() {\n        this.keycloakService.logout();\n      }\n}\n","<div class=\"position-relative\">\n    <div class=\"toolbarMenu\" style=\"display:none;\" style=\"display:none;\" style=\"display:none;\" style=\"display:none;\" style=\"display:none;\" style=\"display:none;\" style=\"display:none;\" style=\"display:none;\" style=\"display:none;\" style=\"display:none;\" style=\"display:none;\" style=\"display:none;\">\n            <a *ngFor=\"let index of indexes\" routerLink=\"{{index.link}}\" routerLinkActive=\"toolbarMenuItemActive\" class=\"toolbarMenuItem\"\n               [routerLinkActiveOptions]=\"{exact:true}\">{{index.key}}</a>\n            <a *ngIf=\"userProfile\" class=\"toolbarMenuItem\" (click)=\"logout()\">Log out</a>\n            <a *ngIf=\"!userProfile\" class=\"toolbarMenuItem\" (click)=\"login()\">Log in</a>\n    </div>\n    <div class=\"p-3 mt-menu\">\n        <router-outlet></router-outlet>\n    </div>\n</div>\n","import {BrowserModule, Title} from '@angular/platform-browser';\nimport {NgModule, APP_INITIALIZER} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport { GfbioComponent } from './gfbio/gfbio.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {SearchInputComponent} from './search-input/search-input.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SearchResultComponent} from './search-result/search-result.component';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {PaginationComponent} from './pagination/pagination.component';\nimport {SuggestionWindowComponent} from './suggestion-window/suggestion-window.component';\nimport {FilterBoxComponent} from './filters/filter-box/filter-box.component';\nimport {JwPaginationModule} from 'jw-angular-pagination';\nimport {NgxSpinnerModule} from 'ngx-spinner';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {CitationComponent} from './citation/citation.component';\nimport {FiltersComponent} from './filters/filters.component';\nimport {OtherFiltersComponent} from './filters/other-filters/other-filters.component';\nimport 'reflect-metadata';\nimport {FilterDatePickerComponent} from './filters/filter-date-picker/filter-date-picker.component';\nimport {MaterialModule} from './material-module';\nimport { BasketDialogComponent } from './basket-dialog/basket-dialog.component';\nimport { ResultItemComponent } from './search-result/result-item/result-item.component';\nimport { DescriptionComponent } from './search-result/description/description.component';\nimport { ContextBoxComponent } from './context-box/context-box.component';\nimport { MapComponent } from './map/map.component';\n\nimport { KeycloakAngularModule, KeycloakService } from 'keycloak-angular';\nimport { initializeKeycloak } from './utils/app.init';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        GfbioComponent,\n        SearchInputComponent,\n        SearchResultComponent,\n        PaginationComponent,\n        SuggestionWindowComponent,\n        FilterBoxComponent,\n        CitationComponent,\n        FiltersComponent,\n        OtherFiltersComponent,\n        FilterDatePickerComponent,\n        BasketDialogComponent,\n        ResultItemComponent,\n        DescriptionComponent,\n        ContextBoxComponent,\n        MapComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        KeycloakAngularModule,\n        HttpClientModule,\n        FormsModule,\n        FontAwesomeModule,\n        JwPaginationModule,\n        NgxSpinnerModule,\n        BrowserAnimationsModule,\n        ReactiveFormsModule,\n        MaterialModule\n    ],\n    providers: [{\n        provide: APP_INITIALIZER,\n        useFactory: initializeKeycloak,\n        multi: true,\n        deps: [KeycloakService]\n    }, Title],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {NodeService} from '../services/remote/node.service';\nimport {environment} from '../../environments/environment';\nimport {Basket} from '../models/basket';\nimport {Hit} from '../models/result/hit';\nimport {plainToClass} from 'class-transformer';\nimport {KeycloakService} from 'keycloak-angular';\n\n@Component({\n    selector: 'app-basket-dialog',\n    templateUrl: './basket-dialog.component.html',\n    styleUrls: ['./basket-dialog.component.css']\n})\nexport class BasketDialogComponent implements OnInit {\n    // text for mouseover\n    textTooltipBasketVATvisualizable = environment.textTooltipBasketVATvisualizable;\n    textTooltipBasketVATnotVisualizable = environment.textTooltipBasketVATnotVisualizable;\n    textTooltipBasketDataAvailable = environment.textTooltipBasketDataAvailable;\n    textTooltipBasketDataNotAvailable = environment.textTooltipBasketDataNotAvailable;\n    textTooltipBasketMetadataAvailable = environment.textTooltipBasketMetadataAvailable;\n    textTooltipBasketMetadataNotAvailable = environment.textTooltipBasketMetadataNotAvailable;\n    textTooltipBasketMultimediaAvailable = environment.textTooltipBasketMultimediaAvailable;\n    textTooltipBasketMultimediaNotAvailable = environment.textTooltipBasketMultimediaNotAvailable;\n    textTooltipBasketRemove = environment.textTooltipBasketRemove;\n    textTooltipBasketRemoveSure = environment.textTooltipBasketRemoveSure;\n    textTooltipBasketEmpty = environment.textTooltipBasketEmpty;\n    spinner = false;\n    savedData: Array<Hit> = [];\n    user;\n    basketId = ``;\n\n    constructor(\n        public dialogRef: MatDialogRef<BasketDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data, private nodeService: NodeService, private keycloakService: KeycloakService) {\n    }\n\n    ngOnInit(): void {\n        this.initializeUserOptions();\n        this.basketId = '';\n    }\n\n    remove(item): void {\n        const index = this.data.indexOf(item);\n        if (index >= 0) {\n            this.data.splice(index, 1);\n        }\n    }\n\n    downloadZip(): void {\n        this.spinner = true;\n        const basket = {\n            basket: this.data\n        };\n        // console.log('downloadZip | this.data');\n        // console.log(this.data);\n        // console.log('downloadZip | basket');\n        // console.log(basket);\n        this.nodeService.basketDownload(basket).subscribe(data => this.downloadSuccess(data),\n            err => this.downloadFailed());\n\n\n    }\n\n    downloadFailed(): void {\n        alert(environment.textAlertBasketErrorDownload);\n        this.spinner = false;\n    }\n\n    downloadSuccess(blob): void {\n        const a = document.createElement('a');\n        const objectUrl = URL.createObjectURL(blob);\n        a.href = objectUrl;\n        a.click();\n        URL.revokeObjectURL(objectUrl);\n        this.spinner = false;\n    }\n\n    sendBasketToCollectionService(): void {\n        this.spinner = true;\n        const basket = {\n            basket: this.data\n        };\n        console.log('sendBasketToCollectionService | this.data');\n        // console.log(this.data);\n        // console.log('sendBasketToCollectionService | basket');\n        // console.log(basket);\n        this.nodeService.postBasketToCollection(basket, this.user).subscribe(data => this.sendCollectionSuccess(data),\n            err => this.sendCollectionFailed(err));\n    }\n\n\n    sendCollectionFailed(err): void {\n        console.log('sendCollectionFailed | err');\n        console.log(err);\n        this.spinner = false;\n    }\n\n    sendCollectionSuccess(data): void {\n        // const a = document.createElement('a');\n        // const objectUrl = URL.createObjectURL(blob);\n        // a.href = objectUrl;\n        // a.click();\n        // URL.revokeObjectURL(objectUrl);\n        console.log('sendCollectionSuccess | data');\n        console.log(data);\n        this.spinner = false;\n    }\n\n\n    emptyBasket(): void {\n        const r = confirm('Are you sure that you want to empty the basket?');\n        // console.log('emptyBasket | this.data');\n        // console.log(this.data);\n        if (r === true) {\n            this.data.splice(0, this.data.length);\n            // this.saveBasket();\n        }\n    }\n\n    saveBasket(): void {\n        const basket = new Basket();\n        basket.setContent(this.data);\n        // console.log('saveBaseket | this.data');\n        // console.log(this.data);\n        basket.setUserId(this.user);\n        this.nodeService.addToBasket(basket).subscribe(val => {\n            this.basketId = JSON.stringify(val.basketId);\n        });\n        this.savedData = this.data.slice(0);\n    }\n\n    checkSaveButton(): boolean {\n        if (this.data.length === 0) {\n            return true;\n        }\n        return JSON.stringify(this.data) === JSON.stringify(this.savedData);\n    }\n\n    visualize(): void {\n        alert(this.basketId);\n    }\n\n    private initializeUserOptions(): void {\n        try {\n            this.user = this.keycloakService.getUsername();\n            if (this.user !== undefined) {\n                this.nodeService.readFromBasket(this.user).subscribe(result => {\n                    if (result.length !== 0) {\n                        const basket = JSON.parse(result[0]?.basketcontent)?.selected;\n                        basket.forEach(item => {\n                            const hit: Hit = plainToClass(Hit, item);\n                            this.savedData.push(hit);\n                        });\n                    }\n                });\n            } else {\n                this.user = null;\n            }\n        } catch {\n            this.user = null;\n        }\n\n    }\n}\n","<div class=\"position-relative\">\n    <div class=\"bg-spinner\" *ngIf=\"spinner\"></div>\n    <div class=\"Absolute-Center\" *ngIf=\"spinner\">\n        <img src=\"assets/gif/loading-icon.jpg\" alt=\"\" width=\"50\"/>\n    </div>\n    <div>\n        <!--<button class=\"btn btn-close\" mat-dialog-close><mat-icon inline=true>close</mat-icon> close</button>-->\n        <div mat-dialog-title class=\"flex-container\">\n            <span class=\"dialog-title\"> Dataset Basket </span>\n            <button\n                    mat-button\n                    class=\"close-icon\"\n                    [mat-dialog-close]=\"[data]\"\n                    cdkFocusInitial\n            >\n                <mat-icon>close</mat-icon>\n            </button>\n        </div>\n        <div mat-dialog-content>\n            <div class=\"p-4\">\n                <table class=\"mat-table\" id=\"table\" *ngIf=\"data.length !== 0\">\n                    <thead>\n                    <tr class=\"mat-header-row\">\n                        <th class=\"mat-header-cell\" scope=\"col\">\n                            Your selected datasets\n                        </th>\n                        <!-- <th class=\"mat-header-cell\" scope=\"col\">Visualizable in VAT</th> -->\n                        <th class=\"mat-header-cell\" scope=\"col\">Description</th>\n                        <th class=\"mat-header-cell\" scope=\"col\">Remove</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr class=\"mat-row\" *ngFor=\"let item of data\">\n                        <td class=\"mat-cell\">\n                <span\n                        class=\"overFlowText w-200p\"\n                        [innerHTML]=\"item.getTitle()\"\n                        matTooltip=\"{{ item.getTitle() }}\"\n                ></span>\n                        </td>\n                        <!-- <td class=\"mat-cell\"> -->\n                        <!--     <span *ngIf=\"!item.getVat()\" matTooltip=\"{{textTooltipBasketVATnotVisualizable}}\" class=\"text-danger\"><mat-icon>cancel</mat-icon></span> -->\n                        <!--     <span *ngIf=\"item.getVat()\" matTooltip=\"{{textTooltipBasketVATvisualizable}}\" class=\"text-success\"><mat-icon>check</mat-icon></span> -->\n                        <!-- </td> -->\n                        <td class=\"mat-cell\">\n                            <div\n                                    *ngIf=\"\n                    item.getLinkage().getData();\n                    then thenBlockData;\n                    else elseBlockData\n                  \"\n                            ></div>\n                            <ng-template #thenBlockData>\n                  <span\n                          matTooltip=\"{{ textTooltipBasketDataAvailable }}\"\n                          class=\"px-1\"\n                  ><i class=\"fas fa-table\"></i\n                  ></span>\n                            </ng-template>\n                            <ng-template #elseBlockData>\n                  <span\n                          matTooltip=\"{{ textTooltipBasketDataNotAvailable }}\"\n                          class=\"half-opacity px-1\"\n                  ><i class=\"fas fa-table\"></i\n                  ></span>\n                            </ng-template>\n                            <div\n                                    *ngIf=\"\n                    item.getLinkage().getMetadata();\n                    then thenBlockMeta;\n                    else elseBlockMeta\n                  \"\n                            ></div>\n                            <ng-template #thenBlockMeta>\n                  <span\n                          matTooltip=\"{{ textTooltipBasketMetadataAvailable }}\"\n                          class=\"px-1\"\n                  ><i class=\"fas fa-info-circle\"></i\n                  ></span>\n                            </ng-template>\n                            <ng-template #elseBlockMeta>\n                  <span\n                          matTooltip=\"{{ textTooltipBasketMetadataNotAvailable }}\"\n                          class=\"half-opacity px-1\"\n                  ><i class=\"fas fa-info-circle\"></i\n                  ></span>\n                            </ng-template>\n                            <div\n                                    *ngIf=\"\n                    item.getLinkage().getMultimedia();\n                    then thenBlockMedia;\n                    else elseBlockMedia\n                  \"\n                            ></div>\n                            <ng-template #thenBlockMedia>\n                  <span\n                          matTooltip=\"{{ textTooltipBasketMultimediaAvailable }}\"\n                          class=\"px-1\"\n                  ><i class=\"fas fa-photo-video\"></i\n                  ></span>\n                            </ng-template>\n                            <ng-template #elseBlockMedia>\n                  <span\n                          matTooltip=\"{{ textTooltipBasketMultimediaNotAvailable }}\"\n                          class=\"half-opacity px-1\"\n                  ><i class=\"fas fa-photo-video\"></i\n                  ></span>\n                            </ng-template>\n                        </td>\n                        <td class=\"mat-cell\">\n                            <button (click)=\"remove(item)\" class=\"iconButton\">\n                                <mat-icon\n                                        class=\"text-danger\"\n                                        matTooltip=\"{{ textTooltipBasketRemove }}\"\n                                >delete\n                                </mat-icon\n                                >\n                            </button>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n                <div class=\"text-danger\" *ngIf=\"data.length === 0\">\n                    {{ textTooltipBasketEmpty }}\n                </div>\n            </div>\n        </div>\n        <mat-dialog-actions align=\"end\" class=\"mt-3\">\n            <button\n                    class=\"btn btn-danger mr-3\"\n                    (click)=\"emptyBasket()\"\n                    [disabled]=\"data.length === 0\"\n            >\n                <mat-icon inline=\"true\">delete</mat-icon>\n                Empty the basket\n            </button>\n            <!-- <button -->\n            <!--   class=\"btn btn-success mr-3\" -->\n            <!--   (click)=\"saveBasket()\" -->\n            <!--   [disabled]=\"checkSaveButton()\" -->\n            <!--   *ngIf=\"data.length !== 0\" -->\n            <!-- > -->\n            <!--   <mat-icon inline=\"true\" class=\"pr-1\">check</mat-icon> -->\n            <!--   <span *ngIf=\"checkSaveButton()\">Basket is saved</span> -->\n            <!--   <span *ngIf=\"!checkSaveButton()\">Save the basket</span> -->\n            <!-- </button> -->\n            <button\n                    class=\"btn btn-primary btn-blue mr-3\"\n                    (click)=\"downloadZip()\"\n                    [disabled]=\"data.length === 0\"\n            >\n                <mat-icon inline=\"true\">download</mat-icon>\n                download\n            </button>\n            <button\n                    class=\"btn btn-success\"\n                    (click)=\"sendBasketToCollectionService()\"\n                    [disabled]=\"data.length === 0\"\n            >\n                <mat-icon inline=\"true\">explore</mat-icon>\n                visualize in VAT\n            </button>\n            <!-- <button class=\"btn btn-primary btn-blue\" (click)=\"visualize()\" [disabled]=\"!checkSaveButton()\" *ngIf=\"data.length !== 0\">\n                      <mat-icon inline=true>download</mat-icon>\n                      get basketId\n                  </button> -->\n        </mat-dialog-actions>\n    </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Citation} from '../models/result/citation';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {Hit} from '../models/result/hit';\n@Component({\n    selector: 'app-citation',\n    templateUrl: './citation.component.html',\n    styleUrls: ['./citation.component.css']\n})\nexport class CitationComponent implements OnInit {\n    result: Citation;\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: Hit) {\n    }\n    ngOnInit(): void {\n        this.result = this.data.getCitation();\n    }\n}\n","<div>\n    <div mat-dialog-title class=\"flex-container\">\n\t\t\n\t\t\t<span class=\"dialog-title\">\n\t\t\t\tCitation\n\t\t\t</span>\n\t\t\t<button mat-button class=\"close-icon\" [mat-dialog-close]=\"true\">\n\t\t\t\t<mat-icon>close</mat-icon>\n\t\t\t</button>\n\t</div>\n    <mat-dialog-content class=\"mat-typography\">\n        <div *ngIf=\"result.getDataCenter() == 'PANGAEA'\">\n\t\t\t<span class=\"font-weight-bold\" *ngFor=\"let creator of result.getCreator()\">{{creator}}, </span> \n\t\t\t<span class=\"font-weight-bold\">({{result.getPubYear()}}):</span> \n\t\t\t{{result.getTitle()}},    <a *ngIf=\"result.getDOI() !== 'undefined'\" href=\"{{result.getDOI()}}\" target=\"_blank\">{{result.getDOI()}}</a>\n        </div>\n\t\t<div *ngIf=\"result.getDataCenter() == 'GATERSLEBEN'\">\n\t\t\t<span class=\"font-weight-bold\" *ngFor=\"let creator of result.getCreator()\">{{creator}}, </span> \n\t\t\t<span class=\"font-weight-bold\">({{result.getPubYear()}}):</span> \n\t\t\t{{result.getTitle()}},    <a *ngIf=\"result.getDOI() !== 'undefined'\" href=\"{{result.getDOI()}}\" target=\"_blank\">{{result.getDOI()}}</a>\n        </div>\n\t\t\t\t  \n        <div *ngIf=\"result.getSource() !== undefined\">\n            {{result.getSource()}}\n        </div>\n    </mat-dialog-content>\n    \n</div>\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport {NodeService} from '../services/remote/node.service';\nimport {Result} from '../models/result/result';\nimport {CommunicationService} from '../services/local/communication.service';\nimport {environment} from '../../environments/environment';\n\n@Component({\n  selector: 'app-context-box',\n  templateUrl: './context-box.component.html',\n  styleUrls: ['./context-box.component.css']\n})\nexport class ContextBoxComponent implements OnInit {\n\n  @ViewChild('contentEditable') public ele: ElementRef;\n\n  @Input()\n  term: string = \"placeholder\";\n\n  @Input()\n  termData = [];\n\n  displayData = [];\n\n  searchData = [];\n\n  singleClick: boolean = true;\n  loading = false;\n  searchUri;\n  showSearchInformation = false;\n  icon = \"expand_less\";\n  searchClass = \"linkWidgetBlue\";\n\n  infoText = environment.textTSWidgetInfo;\n\n  constructor(private nodeService: NodeService,\n              private communicationService: CommunicationService) { }\n\n  ngOnInit(): void {\n    this.filter(this.term);\n\n    // Make the Term + the Data to Display UpperCase\n\n    this.term = this.term[0].toUpperCase() + this.term.slice(1);\n\n    if (this.displayData != undefined){\n        this.displayData.forEach(function (value) {\n          value.label = value.label[0].toUpperCase() + value.label.slice(1);\n        });\n    }\n  }\n\n  /* We use the CommunicationService to forward the clicked\n   * key to the search bar\n   */\n\n  onDoubleClick(label: string){\n    this.singleClick = false;\n\n    var subject = this.communicationService.getSearchKey();\n    subject.next(subject.getValue() + \" \" + label);\n\n    this.searchClass = \"linkWidgetBlue\";\n  }\n\n  /* In onClick we check if the user only clicked once\n   * this is done with a timeout set to 200ms\n   * if the user presses again in that time frame we don't\n   * open the window/link\n   */\n\n  onClick(url: string){\n    this.singleClick = true;\n    this.searchClass = \"linkWidgetBlue unselectable\";\n    setTimeout(()=>{\n        if(this.singleClick){\n             window.open(url, \"_blank\");\n             // alternative: window.location.href = url;\n             this.searchClass = \"linkWidgetBlue\";\n        }\n     },200);\n  }\n\n  narrow(source: string, uri: string){\n    this.showSearchInformation = false;\n    this.searchData = undefined;\n    this.searchUri = uri;\n    this.loading = true;\n\n    this.nodeService.narrow(source, uri).subscribe(value => {\n      if (value !== undefined) {\n          this.searchData = value.results;\n          this.loading = false;\n          this.showSearchInformation = true;\n          this.icon = \"expand_less\";\n      }\n    });\n  }\n\n  broad(source: string, uri: string){\n    this.showSearchInformation = false;\n    this.searchData = undefined;\n    this.searchUri = uri;\n    this.loading = true;\n\n    this.nodeService.broad(source, uri).subscribe(value => {\n      if (value !== undefined) {\n          this.searchData = value.results;\n          this.loading = false;\n          this.showSearchInformation = true;\n          this.icon = \"expand_less\";\n      }\n    });\n  }\n\n  filter(term: string) {\n\n\n    for(var t in this.termData){\n      // First check the labels for our term\n      if((this.termData[t].label.toString().toLowerCase()+ 's').includes(term.toLowerCase())){\n        this.displayData.push(this.termData[t]);\n      }else\n\n      /* Now check the synonyms/commonNames for the term,\n       * if found, add it to the list of displayed data\n       */\n\n      if(this.termData[t].synonyms != undefined){\n        for(var syn in this.termData[t].synonyms){\n          if((this.termData[t].synonyms[syn].toString().toLowerCase()+ 's').includes(term.toLowerCase())){\n            this.displayData.push(this.termData[t]);\n            break;\n          }\n        }\n      }else\n\n      if(this.termData[t].commonNames != undefined) {\n        for(var syn in this.termData[t].commonNames){\n          if((this.termData[t].commonNames[syn].toString().toLowerCase()+ 's').includes(term.toLowerCase())){\n            this.displayData.push(this.termData[t]);\n            break;\n          }\n        }\n      }\n    }\n  }\n\n\n\n}\n","<div *ngIf=\"displayData != undefined && displayData.length > 0\" style=\"position: absolute; color: grey;\">\n\n\n    <mat-card class=\"content-box\">\n\n        <mat-card-content>\n\n            <div *ngFor=\"let data of displayData; let i = index\">\n\n                <!--    Display data label for every Element\n                        but only display the info box for the first element -->\n\n                <div class=\"row\">\n                    <div class=\"col-6\">\n                        <h4>\n                            <div *ngIf=\"data.label != undefined\">\n                                {{data.label}}\n                            </div>\n                        </h4>\n                    </div>\n                    <div class=\"col-2 offset-md-4\" *ngIf=\"i == 0\">\n                        <mat-icon\n                            class=\"unselectable\"\n                            style=\"color: var(--darkgrey); font-size: 33px;\"\n                            [matTooltip]=\"infoText\"\n                            matTooltipClass=\"result-item-tooltip\"\n                            matTooltipPosition=\"below\"\n                        >\n                            info\n                        </mat-icon>\n                    </div>\n                </div>\n\n                <!-- Display data description, uri, source and synonyms/commonNames -->\n\n                <div *ngIf=\"data.description != undefined\">\n                    {{data.description}}\n                </div>\n\n                <div *ngIf=\"data.uri != undefined\">\n                    \n                        URI:\n                        <!--<a target=\"_blank\" style=\"opacity: 100%; color: var(--darkblue);\" href={{data.uri}}>\n                            {{data.uri}}\n                        </a>-->\n\t\t\t\t\t\t <a target=\"_blank\" class=\"linkWidgetBlue\" href={{data.uri}}>\n                            {{data.uri}}\n                        </a>\n                    \n                </div>\n\n                <div *ngIf=\"data.sourceTerminology != undefined\">\n                    Source:\n                    {{data.sourceTerminology}}\n                </div>\n\n                <div *ngIf=\"data.synonyms != undefined\">\n\t\t\t\t\tSynonyms:\n                    <span *ngFor=\"let synonym of data.synonyms; let i = index\">\n                        <span *ngIf=\"i != 0\">, </span>\n                        {{synonym}}</span>\n                </div>\n                <div *ngIf=\"data.commonNames != undefined\">Synonyms:\n                    <span *ngFor=\"let commonNames of data.commonNames; let i = index\">\n                        <span *ngIf=\"i != 0\">, </span>\n                        {{commonNames}}</span>\n                </div>\n\n                <!-- Display a narrower and broader button if the data is internal -->\n<br>\n                <div class=\"row\" *ngIf=\"data.internal != undefined && data.internal == 'true'\">\n                    <div class=\"col-4\">\n                        <button class=\"btn-blue\" mat-flat-button (click)=\"narrow(data.sourceTerminology, data.uri)\">\n                            <mat-icon>close_fullscreen</mat-icon>\n                            Narrower\n                        </button>\n                    </div>\n                    <div class=\"col-4\">\n                        <button class=\"btn-blue\" mat-flat-button (click)=\"broad(data.sourceTerminology, data.uri)\">\n                            <mat-icon>zoom_out_map</mat-icon>\n                            Broader\n                        </button>\n                    </div>\n                    <div class=\"col-2 offset-md-2\">\n                        <mat-spinner diameter=\"35\" *ngIf=\"loading && data.uri == searchUri\"></mat-spinner>\n                        <!-- Switch the expand icon based on a click -->\n                        <mat-icon\n                            style=\"font-size: 35px;\"\n                            (click)=\"showSearchInformation = !showSearchInformation;\n                                    icon == 'expand_less' ? icon='expand_more' : icon='expand_less'\"\n                            *ngIf=\"!loading && data.uri == searchUri && searchData != undefined && searchData.length > 0\"\n                            class=\"unselectable\"\n                        >\n                            {{icon}}\n                        </mat-icon>\n                    </div>\n                </div>\n\n\n                <!--    If the user pressed the broader or narrower button\n                        the data is loaded into searchData and displayed here\n                        using another mat-card\n                -->\n\n\n                <div\n                    *ngIf=\"searchData != undefined && searchData.length > 0 && showSearchInformation &&\n                    !loading && data.uri == searchUri\"\n                >\n\n                    <mat-card class=\"inner-box ml-n1\">\n                        <mat-card-content>\n\n                            <div *ngFor=\"let data of searchData; let i = index\">\n\n                                <div *ngIf=\"data.label != undefined\">\n\n                                    <span (dblclick)=\"onDoubleClick(data.label)\" (click)=\"onClick(data.uri)\"\n                                          [className]=\"searchClass\"\n                                    >\n                                        {{data.label}}\n                                    </span>\n                                </div>\n\n                            </div>\n\n\n                        </mat-card-content>\n                    </mat-card>\n                </div>\n\n                <div *ngIf=\"i < displayData.length-1\" class=\"mb-2 mt-3\">\n                    <mat-divider  [inset]=\"true\"></mat-divider>\n                </div>\n\n            </div>\n\n        </mat-card-content>\n    </mat-card>\n\n</div>","import {Component, Input, OnInit, Output} from '@angular/core';\nimport {CommunicationService} from '../../services/local/communication.service';\nimport {EventEmitter} from '@angular/core';\nimport {Aggregation} from '../../models/result/aggregation';\n\n\n@Component({\n    selector: 'app-filter-box',\n    templateUrl: './filter-box.component.html',\n    styleUrls: ['./filter-box.component.css']\n})\nexport class FilterBoxComponent implements OnInit {\n    @Input() filters: Aggregation;\n    @Output() chosenFacet = new EventEmitter<any>();\n    showMore = false;\n\n    constructor(private communicationService: CommunicationService) {\n    }\n\n    ngOnInit(): void {\n        const filter = this.communicationService.getFilter();\n        if (filter !== undefined) {\n            filter.forEach(result => {\n                this.filters.getFacets().forEach(item => {\n                    this.checkFilter(item, result, this.filters.getId() + 'Facet');\n                });\n            });\n        }\n    }\n\n    showLess(i): boolean {\n        if (this.showMore === true) {\n            return true;\n        }\n        return i < 5;\n    }\n\n    checkFilter(item, value, facet): void {\n        if (value.hasOwnProperty('term')) {\n            if (item.getKey() === value.term[facet]) {\n                item.setChecked(true);\n            }\n        }\n    }\n\n    sendFacet(key, facet): void {\n        const keyAndFacet = [key, facet];\n        this.chosenFacet.emit(keyAndFacet);\n    }\n}\n","<div>\n    <div *ngFor=\"let filter of filters.getFacets(); let i=index\">\n        <div [ngClass]=\"{'d-none':!showLess(i)}\">\n            <label for=\"id-{{filter.getKey()}}\" class=\"pl-2 linkBlue m-0\">\n                <input id=\"id-{{filter.getKey()}}\" type=\"checkbox\" (click)=\"sendFacet(filter.getKey(),filters.getId()+'Facet')\"\n                       [checked]=\"filter.getChecked()\">\n                {{filter.getKey()}} ({{filter.getDocCount()}})</label>\n        </div>\n    </div>\n    <div *ngIf=\"filters.getFacets()?.length>5\">\n        <div class=\"linkBlue\" *ngIf=\"!showMore\" (click)=\"showMore=true\">... show\n            more\n        </div>\n        <div class=\"linkBlue\" *ngIf=\"showMore\" (click)=\"showMore=false\">... show\n            less\n        </div>\n    </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {CommunicationService} from '../../services/local/communication.service';\nimport * as _moment from 'moment';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\n\n@Component({\n    selector: 'app-filter-date-picker',\n    templateUrl: './filter-date-picker.component.html',\n    styleUrls: ['./filter-date-picker.component.css']\n})\nexport class FilterDatePickerComponent implements OnInit {\n    @Input() datePicker;\n    @Input() filters;\n    @Input() filterValues;\n    @Output() chosenDate = new EventEmitter<any>();\n    start;\n    startFormat;\n    end;\n    endFormat;\n    openChart = true;\n    constructor(breakpointObserver: BreakpointObserver) {\n        breakpointObserver.observe([\n            Breakpoints.HandsetLandscape,\n            Breakpoints.HandsetPortrait\n        ]).subscribe(result => {\n            if (result.matches) {\n                this.openChart = false;\n            }\n        });\n    }\n\n    ngOnInit(): void {\n        // tslint:disable-next-line:forin\n        for (const i in this.filterValues){\n            this.datePicker.inputs.forEach((input) => {\n                if (this.filterValues[i] === input.name) {\n                    const value = Object.values(Object.values(this.filters[i].range)[0])[0];\n                    const key = Object.keys(Object.values(this.filters[i].range)[0])[0];\n                    if (key === 'gte'){\n                        this.start = new Date(value);\n                        this.startFormat = new Date(value);\n                    }\n                    if (key === 'lte'){\n                        this.end = new Date(value);\n                        this.endFormat = new Date(value);\n                    }\n                }\n            });\n        }\n    }\n\n    setDate(dateValue, type): void {\n        let date = dateValue.value;\n        const moment = _moment;\n        if (this.datePicker.type === 'collection') {\n            const str = moment(date).format();\n            const lastIndex = str.lastIndexOf('+');\n            date = str.substring(0, lastIndex);\n        } else {\n            date = moment(date).format('YYYY');\n        }\n        if (type === 'start') {\n            this.startFormat = date;\n        } else {\n            this.endFormat = date;\n        }\n    }\n\n    applyDate(): void {\n        const typeAndValues = [this.startFormat, this.endFormat];\n        this.chosenDate.emit(typeAndValues);\n    }\n}\n","<div>\n    <mat-accordion>\n        <mat-expansion-panel class=\"mt-3\" [expanded]=\"openChart\">\n            <mat-expansion-panel-header class=\"card-header\" style=\"height: 40px\">\n                <div class=\"row\">\n                    <div class=\"col-1 col-md-1\">\n                        <mat-icon class=\"filterIcon\">{{datePicker.icon}}</mat-icon>\n                    </div>\n                    <div class=\"col-auto col-xs-auto col-md-auto\">\n                        {{datePicker.title}}\n                    </div>\n                </div>\n\n            </mat-expansion-panel-header>\n            <div class=\"pt-2\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-xs-12 col-md-12\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>MM/DD/YYYY</mat-label>\n                            <input matInput [matDatepicker]=\"startDate\" [(ngModel)]=\"start\"\n                                   (dateChange)=\"setDate($event,'start')\">\n                            <mat-datepicker-toggle matSuffix [for]=\"startDate\"></mat-datepicker-toggle>\n                            <mat-datepicker #startDate></mat-datepicker>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-12 col-xs-12 col-md-8\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>MM/DD/YYYY</mat-label>\n                            <input matInput [matDatepicker]=\"EndDate\" [(ngModel)]=\"end\"\n                                   (dateChange)=\"setDate($event,'end')\">\n                            <mat-datepicker-toggle matSuffix [for]=\"EndDate\"></mat-datepicker-toggle>\n                            <mat-datepicker #EndDate></mat-datepicker>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-12 col-xs-12 col-md-auto-apply\">\n                        <button type=\"submit\" class=\"btn btn-secondary\" (click)=\"applyDate()\">apply</button>\n                    </div>\n                </div>\n            </div>\n\n        </mat-expansion-panel>\n    </mat-accordion>\n<!--    <div class=\"card mb-3\">-->\n<!--        <div class=\"card-header\">-->\n<!--            <div class=\"row\">-->\n<!--                <div class=\"col-1 col-md-1\">-->\n<!--                    <mat-icon class=\"filterIcon\">{{datePicker.icon}}</mat-icon>-->\n<!--                </div>-->\n<!--                <div class=\"col-auto col-xs-auto col-md-auto\">-->\n<!--                    {{datePicker.title}}-->\n<!--                </div>-->\n<!--            </div>-->\n<!--        </div>-->\n<!--        <div class=\"card-body\">-->\n<!--            <div class=\"row\">-->\n<!--                <div class=\"col-12 col-xs-12 col-md-12\">-->\n<!--                    <mat-form-field appearance=\"fill\">-->\n<!--                        <mat-label>MM/DD/YYYY</mat-label>-->\n<!--                        <input matInput [matDatepicker]=\"startDate\" [(ngModel)]=\"start\"-->\n<!--                               (dateChange)=\"setDate($event,'start')\">-->\n<!--                        <mat-datepicker-toggle matSuffix [for]=\"startDate\"></mat-datepicker-toggle>-->\n<!--                        <mat-datepicker #startDate></mat-datepicker>-->\n<!--                    </mat-form-field>-->\n<!--                </div>-->\n<!--            </div>-->\n<!--            <div class=\"row\">-->\n<!--                <div class=\"col-12 col-xs-12 col-md-8\">-->\n<!--                    <mat-form-field appearance=\"fill\">-->\n<!--                        <mat-label>MM/DD/YYYY</mat-label>-->\n<!--                        <input matInput [matDatepicker]=\"EndDate\" [(ngModel)]=\"end\"-->\n<!--                               (dateChange)=\"setDate($event,'end')\">-->\n<!--                        <mat-datepicker-toggle matSuffix [for]=\"EndDate\"></mat-datepicker-toggle>-->\n<!--                        <mat-datepicker #EndDate></mat-datepicker>-->\n<!--                    </mat-form-field>-->\n<!--                </div>-->\n<!--                <div class=\"col-12 col-xs-12 col-md-auto-apply\">-->\n<!--                    <button type=\"submit\" class=\"searchButton\" (click)=\"applyDate()\">apply</button>-->\n<!--                </div>-->\n<!--            </div>-->\n<!--        </div>-->\n<!--    </div>-->\n</div>\n","import {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges} from '@angular/core';\nimport {CommunicationService} from '../services/local/communication.service';\nimport {Result} from '../models/result/result';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\n\n@Component({\n    selector: 'app-filters',\n    templateUrl: './filters.component.html',\n    styleUrls: ['./filters.component.css']\n})\nexport class FiltersComponent implements OnChanges {\n    @Input() result: Result;\n    @Input() chosenFilter: Array<object> = [];\n    filterValues: Array<string> = [];\n    @Output() filters = new EventEmitter<any>();\n    @Input() resetFilters: boolean;\n    openChart = true;\n    constructor(breakpointObserver: BreakpointObserver, private communicationService: CommunicationService) {\n        breakpointObserver.observe([\n            Breakpoints.HandsetLandscape,\n            Breakpoints.HandsetPortrait\n        ]).subscribe(result => {\n            if (result.matches) {\n                this.openChart = false;\n            }\n        });\n    }\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes?.resetFilters?.currentValue === true){\n            this.clearAllFilters();\n        }\n        if(changes?.chosenFilter?.currentValue?.length > 0) {\n            this.setAllFilters(changes.chosenFilter.currentValue);\n        }\n    }\n\n    sendFilter(keyAndFacet): void {\n        const key = keyAndFacet[0];\n        const facet = keyAndFacet[1];\n        const label = keyAndFacet[2];\n        const facetObg = {};\n        facetObg[facet] = key;\n        let FilterExist = false;\n        let index: number;\n        this.chosenFilter.forEach((value, i) => {\n            // @ts-ignore\n            if (value?.term[facet] === key) {\n                FilterExist = true;\n                index = i;\n            }\n        });\n        if (FilterExist) {\n            this.chosenFilter.splice(Number(index), 1);\n            this.filterValues.splice(Number(index), 1);\n        } else {\n            this.chosenFilter.push({term: facetObg});\n            if (label !== undefined) {\n                this.filterValues.push(label);\n            } else {\n                this.filterValues.push(key);\n            }\n        }\n        this.startSearching();\n    }\n\n    startSearching(): void {\n        this.filters.emit(this.chosenFilter);\n        // console.log(this.chosenFilter);\n        // console.log(this.filterValues);\n    }\n\n    removeFilter(i): void {\n        this.communicationService.setRemovedFilter([this.filterValues[i]]);\n        this.filterValues.splice(i, 1);\n        this.chosenFilter.splice(i, 1);\n        this.startSearching();\n    }\n\n    clearAllFilters(): void {\n        this.communicationService.setRemovedFilter(this.filterValues);\n        this.chosenFilter = [];\n        this.filterValues = [];\n        this.communicationService.setFilter(this.chosenFilter);\n    }\n\n    onClearAllFilters(): void {\n        this.clearAllFilters();\n        this.startSearching();\n    }\n\n    applyDate(dates, datePicker): void {\n        // console.log(dates);\n        const start = dates[0];\n        const end = dates[1];\n        if (start !== undefined || end !== undefined) {\n            // tslint:disable-next-line:forin\n            for (const i in this.filterValues){\n                datePicker.inputs.forEach((input) => {\n                    if (this.filterValues[i] === input.name) {\n                        this.chosenFilter.splice(Number(i), 1);\n                        this.filterValues.splice(Number(i), 1);\n                    }\n                });\n            }\n            if (datePicker.type === 'collection') {\n                if (start !== undefined) {\n                    const date = {\n                        range: {maxDateTime: {gte: start}}\n                    };\n                    this.chosenFilter.push(date);\n                    this.filterValues.push('Collection start date');\n                }\n                if (end !== undefined) {\n                    const date = {\n                        range: {minDateTime: {lte: end}}\n                    };\n                    this.chosenFilter.push(date);\n                    this.filterValues.push('Collection end date');\n                }\n            }\n            if (datePicker.type === 'publication') {\n                if (start !== undefined) {\n                    const date = {\n                        range: {citation_yearFacet: {gte: start}}\n                    };\n                    this.chosenFilter.push(date);\n                    this.filterValues.push('Publication start date');\n                }\n                if (end !== undefined) {\n                    const date = {\n                        range: {citation_yearFacet: {lte: end}}\n                    };\n                    this.chosenFilter.push(date);\n                    this.filterValues.push('Publication end date');\n                }\n            }\n            this.startSearching();\n        }\n    }\n\n    setAllFilters(filterList) : void {\n        this.communicationService.setFilter(filterList);\n        this.filterValues = [];\n        filterList.forEach(val => {\n            if(val.term) {\n                this.filterValues.push(val.term[Object.keys(val.term)[0]]);\n            }\n            else if(val.range) {\n                let facetName = Object.keys(val.range)[0];\n                let datePickerType, modifier;\n                switch(facetName) {\n                    case(\"minDateTime\"): datePickerType = \"Collection\"; break;\n                    case(\"citation_yearFacet\"): datePickerType = \"Publication\"; break;\n                }\n                let modifierName = Object.keys(val.range[facetName])[0];\n                switch(modifierName) {\n                    case(\"gte\"): modifier = \"start\"; break;\n                    case(\"lte\"): modifier = \"end\"; break;\n                }\n                this.filterValues.push(`${datePickerType} ${modifier} date`)\n                this.result.getDatePickers().find(dp => dp.type == \"collection\")[modifier] = val.range[facetName][modifierName];\n            }\n        });\n        this.chosenFilter = filterList;\n    }\n}\n","<div>\n                <mat-accordion>\n                    <mat-expansion-panel  class=\"mt-3\" [expanded]=\"openChart\">\n                        <mat-expansion-panel-header class=\"card-header\" style=\"height: 40px\">\n                            filters\n\n                        </mat-expansion-panel-header>\n                        <div class=\"pt-2\">\n                            <div class=\"mb-3\">\n                                <span class=\"ml-2 linkBlue\" (click)=\"onClearAllFilters()\">Clear All Filters</span>\n                            </div>\n                            <div class=\"my-3\">\n                                <mat-chip-list aria-label=\"article selection\" class=\"mat-chip-list-stacked\">\n                                    <div *ngFor=\"let item of filterValues; let i=index\">\n                                        <mat-chip [selectable]=\"false\"\n                                                  [removable]=\"true\" (removed)=\"removeFilter(i)\" class=\"h-auto\">\n                                            {{item}}\n                                            <mat-icon matChipRemove>cancel</mat-icon>\n                                        </mat-chip>\n                                    </div>\n                                </mat-chip-list>\n                            </div>\n                            <div *ngFor=\"let item of result?.getAggregations(); let i=index\">\n                                <mat-accordion>\n                                    <mat-expansion-panel class=\"mt-3\" [expanded]=\"openChart\">\n                                        <mat-expansion-panel-header class=\"card-header\" style=\"height: 40px\">\n                                            <div class=\"row\">\n                                                <div class=\"col-1 col-md-1\">\n                                                    <mat-icon class=\"filterIcon\">{{item.getIcon()}}</mat-icon>\n                                                </div>\n                                                <div class=\"col-auto col-md-auto\">\n                                                    {{item.getTitle()}}\n                                                </div>\n                                            </div>\n\n                                        </mat-expansion-panel-header>\n                                        <div class=\"pt-2\">\n                                            <app-filter-box [filters]=\"item\"\n                                                            (chosenFacet)=\"sendFilter($event)\"></app-filter-box>\n                                        </div>\n\n                                    </mat-expansion-panel>\n                                </mat-accordion>\n\n                            </div>\n                            <div *ngFor=\"let item of result?.getOtherFilters()\">\n                                <mat-accordion>\n                                    <mat-expansion-panel  class=\"mt-3\" [expanded]=\"openChart\">\n                                        <mat-expansion-panel-header class=\"card-header\" style=\"height: 40px\">\n                                            <div class=\"row\">\n                                                <div class=\"col-1 col-md-1\">\n                                                    <mat-icon class=\"filterIcon\">{{item.icon}}</mat-icon>\n                                                </div>\n                                                <div class=\"col-auto col-md-auto\">\n                                                    {{item.title}}\n                                                </div>\n                                            </div>\n\n                                        </mat-expansion-panel-header>\n                                        <div class=\"pt-2\">\n                                            <app-other-filters [filter]=\"item.parameters\" [filterValues] = \"filterValues\"\n                                                               (chosenFilter)=\"sendFilter($event)\"></app-other-filters>\n                                        </div>\n\n                                    </mat-expansion-panel>\n                                </mat-accordion>\n                            </div>\n                            <div *ngFor=\"let datePicker of result?.getDatePickers()\">\n                                <app-filter-date-picker [datePicker]=\"datePicker\" [filters] = \"chosenFilter\" [filterValues] = \"filterValues\"\n                                                        (chosenDate)=\"applyDate($event,datePicker)\"></app-filter-date-picker>\n                            </div>\n                        </div>\n\n                    </mat-expansion-panel>\n                </mat-accordion>\n\n\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'app-other-filters',\n    templateUrl: './other-filters.component.html',\n    styleUrls: ['./other-filters.component.css']\n})\nexport class OtherFiltersComponent implements OnInit {\n\n    constructor() {\n    }\n\n    @Input() filter;\n    @Input() filterValues;\n    @Output() chosenFilter = new EventEmitter<any>();\n\n    ngOnInit(): void {\n        this.filterValues.forEach((value) => {\n            this.filter.forEach((item) => {\n                if (value === item.label) {\n                    // console.log(item.label);\n                    item.checked = true;\n                }\n            });\n        });\n    }\n\n    sendFilter(type, value, label): void {\n        const keyAndFilter = [type, value, label];\n        this.chosenFilter.emit(keyAndFilter);\n    }\n}\n","<div>\n    <div *ngFor=\"let item of filter\">\n\n        <label for=\"{{item.id}}\" class=\"pl-2 linkBlue m-0\">\n            <input id=\"{{item.id}}\" type=\"checkbox\"\n                   (click)=\"sendFilter(item.parameterValue,item.parameterType, item.label)\"\n                   [checked]=\"item.checked\">\n            {{item.label}} </label>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {CommunicationService} from '../services/local/communication.service';\nimport {Result} from '../models/result/result';\nimport {StartSearchingService} from '../services/local/start-searching.service';\nimport {SearchResult} from '../interface/search-result';\nimport {Filters} from '../interface/filters';\nimport {SearchInput} from '../interface/search-input';\nimport {ActivatedRoute} from '@angular/router';\nimport {Location} from '@angular/common';\n\n@Component({\n    selector: 'app-gfbio',\n    templateUrl: './gfbio.component.html',\n    styleUrls: ['./gfbio.component.css']\n})\nexport class GfbioComponent implements OnInit, SearchResult, Filters, SearchInput {\n    semantic = false;\n    resetFilters = true;\n    result: Result;\n    searchKey = [];\n    from = 0;\n    filters;\n    markers;\n    searchKeyFromQuery = \"\";\n\n    constructor(private communicationService: CommunicationService,\n                private startSearchingService: StartSearchingService,\n                private route: ActivatedRoute,\n                private location: Location) {\n    }\n\n    ngOnInit(): void {\n        let filterFromUri = this.route.snapshot?.queryParamMap?.get(\"filter\") ?? \"\";\n        if(filterFromUri != \"\") {\n            this.filters = JSON.parse(decodeURIComponent(filterFromUri));\n        }\n        \n        this.semantic = (this.route.snapshot?.queryParamMap?.get(\"s\")) == \"1\";\n\n        let queryFromUri = decodeURIComponent(this.route.snapshot?.queryParamMap?.get(\"q\") ?? \"\");        \n        if( queryFromUri != \"\" && !queryFromUri.match(/(\\<|\\>)/)) {\n            this.searchKeyFromQuery = queryFromUri;\n            this.searchKey = [queryFromUri];\n        }\n        this.startSearching();\n        this.communicationService.getResult().subscribe(value => {\n            if (value !== undefined) {\n                this.result = value;\n            }\n        });\n    }\n\n    mapItems(items): void {\n        this.markers = {items};\n    }\n\n    paginationClicked(from): void {\n        this.resetFilters = false;\n        this.from = from;\n        this.startSearching();\n    }\n\n    searchKeySubmitted(key): void {\n        this.resetFilters = true;\n        this.searchKey = key[0];\n        this.semantic = key[1];\n        this.from = 0;\n        this.filters = [];\n        this.startSearching();\n    }\n\n    filterSubmitted(filters): void {\n        this.resetFilters = false;\n        this.filters = filters;\n        this.from = 0;\n        this.startSearching();\n    }\n\n    startSearching(): void {\n        this.setPageUrl();\n        this.startSearchingService.startSearching(this.searchKey, this.semantic, this.from, this.filters);\n    }\n\n    setPageUrl(): void {\n        var parameters = [\n            (this.searchKey?.join(\"\")) ? \"q=\" + this.searchKey.join(\"+\") : null,\n            this.semantic ? \"s=1\" : null,\n            this.filters?.length > 0 ? \"filter=\" + JSON.stringify(this.filters) : null,\n        ].filter(p => p);\n        this.location.go((parameters.length > 0) ? \"?\" + parameters.join(\"&\") : \"\");\n    }\n}\n","<div>\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                <app-map [markers]=\"markers\"></app-map>\n                <app-filters [result]=\"result\" (filters)=\"filterSubmitted($event)\" [resetFilters]=\"resetFilters\" [chosenFilter]=\"filters\"></app-filters>\n            </div>\n            <div class=\"col-md-9\">\n                <app-search-input (searchKeyEmmit)=\"searchKeySubmitted($event)\" [searchKey]=\"searchKeyFromQuery\" [semanticValue]=\"semantic\"></app-search-input>\n                <div class=\"mt-3\">\n                    <app-search-result [result]=\"result\" (from)=\"paginationClicked($event)\" (mapItem)=\"mapItems($event)\"></app-search-result>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Component, AfterViewInit, Input, SimpleChanges, OnChanges} from '@angular/core';\nimport * as L from 'leaflet';\n\n@Component({\n    selector: 'app-map',\n    templateUrl: './map.component.html',\n    styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements AfterViewInit, OnChanges {\n    private map;\n    @Input() markers;\n    private layerGroup;\n\n    private initMap(): void {\n        this.map = L.map('map', {\n            center: [48.59378, 9.35982],\n            zoom: 3\n        });\n\n        const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            maxZoom: 18,\n            minZoom: 1,\n            attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n        });\n\n        tiles.addTo(this.map);\n    }\n\n    constructor() {\n    }\n\n    ngAfterViewInit(): void {\n        this.initMap();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        let lastMarker;\n        if (this.layerGroup !== undefined) {\n            this.map.removeLayer(this.layerGroup);\n        }\n        if (this.markers && this.markers?.items?.length !== 0) {\n            const coordinates = [];\n            this.markers.items.forEach(item => {\n                if (item.getLatitude() !== undefined && item.getLongitude() !== undefined) {\n                    const coordinate = [item.getLatitude(), item.getLongitude(), item.getColor()];\n                    coordinates.push(coordinate);\n                }\n            });\n            const layerGroup = L.layerGroup().addTo(this.map);\n            coordinates.forEach((value, i) => {\n                const circle = L.circle([coordinates[i][0], coordinates[i][1]], {\n                    color: coordinates[i][2],\n                    fillColor: coordinates[i][2],\n                    fillOpacity: 0.5,\n                    radius: 500\n                });\n                layerGroup.addLayer(circle);\n                lastMarker = [coordinates[i][0], coordinates[i][1]];\n            });\n            if (lastMarker !== undefined) {\n                this.map.panTo(new L.LatLng(lastMarker[0], lastMarker[1]));\n            }\n            this.layerGroup = layerGroup;\n        }\n    }\n}\n","<div>\n    <div class=\"map-container\">\n        <div class=\"map-frame\">\n            <div id=\"map\"></div>\n        </div>\n    </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatMenuModule} from '@angular/material/menu';\n\n\n@NgModule({\n    exports: [\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatIconModule,\n        MatInputModule,\n        MatNativeDateModule,\n        MatTooltipModule,\n        MatCardModule,\n        MatProgressSpinnerModule,\n        MatDividerModule,\n        MatMenuModule\n    ],\n    providers: [MatDatepickerModule, MatNativeDateModule],\n})\nexport class MaterialModule {}\n","import {Expose} from 'class-transformer';\n// for saving the basket by the user\nexport class Basket {\n    @Expose({ name: 'userid' })\n    private userId: string;\n    @Expose({ name: 'basketid' })\n    private basketId: string;\n    @Expose({ name: 'content' })\n    private content: JSON;\n\n    static from(json): Basket {\n        return Object.assign(new Basket(), json);\n    }\n\n    getContent(): JSON {\n        return this.content;\n    }\n\n    setContent(content: JSON): void {\n        this.content = content;\n    }\n\n    getUserId(): string {\n        return this.userId;\n    }\n\n    setUserId(userId: string): void {\n        this.userId = userId;\n    }\n\n    getBasketId(): string {\n      return this.basketId;\n  }\n\n  setBasketId(basketId: string): void {\n      this.basketId = basketId;\n  }\n}\n","import {Facet} from './facet';\n\n// filter box on the left side\nexport class Aggregation {\n    // the containing items in the box\n    private facets: Facet[];\n    // the id of the checkbox\n    private id: string;\n    // the title of the checkbox\n    private title: string;\n    // the name of the icon (mat-icon)\n    private icon: string;\n\n    getFacets(): Facet[] {\n        return this.facets;\n    }\n\n    setFacets(facets: Facet[]): void {\n        this.facets = facets;\n    }\n\n    getId(): string {\n        return this.id;\n    }\n\n    setId(id: string): void {\n        this.id = id;\n    }\n\n    getTitle(): string {\n        return this.title;\n    }\n\n    setTitle(title: string): void {\n        this.title = title;\n    }\n\n    getIcon(): string {\n        return this.icon;\n    }\n\n    setIcon(icon: string): void {\n        this.icon = icon;\n    }\n\n\n}\n","// the citation for every dataset\nexport class Citation {\n    // the title of the dataset\n    private title: string;\n    // the name of the authors\n    private creator: Array<string>;\n    // the publication date\n    private date: string;\n    private source: string;\n    // the url\n    private DOI: string;\n    private dataCenter: string;\n\n    getTitle(): string {\n        return this.title;\n    }\n\n    setTitle(title: string): void {\n        this.title = title;\n    }\n\n    getCreator(): Array<string> {\n        return this.creator;\n    }\n\n    setCreator(creator: Array<string>): void {\n        this.creator = creator;\n    }\n\n    getDate(): string {\n        return this.date;\n    }\n\n    setDate(date: string): void {\n        this.date = date;\n    }\n\n    getPubYear(): string {\n        return this.date?.substring(0, 4);\n    }\n\n    getSource(): string {\n        return this.source;\n    }\n\n    setSource(source: string): void {\n        this.source = source;\n    }\n\n    getDOI(): string {\n        return this.DOI;\n    }\n\n    setDOI(DOI: string): void {\n        this.DOI = DOI;\n    }\n\n    getDataCenter(): string {\n        return this.dataCenter.toUpperCase();\n    }\n\n    setDataCenter(dataCenter: string): void {\n        this.dataCenter = dataCenter;\n    }\n\n}\n","// the descriptions after the title of the dataset\nexport class Description {\n    // the key of the description\n    private title: string;\n    // the description value\n    private value: string;\n\n    getTitle(): string {\n        return this.title;\n    }\n\n    setTitle(title: string): void {\n        this.title = title;\n    }\n    getValue(): string {\n        return this.value;\n    }\n\n    setValue(value: string): void {\n        this.value = value;\n    }\n}\n","// checkbox item in the filter box\nexport class Facet {\n    // the mane of the facet\n    private key: string;\n    // the number of the available datasets after applying the facet\n    private docCount: number;\n    // if the facet is activated (by default, it is false)\n    private checked = false;\n\n    getKey(): string {\n        return this.key;\n    }\n    setKey(key: string): void {\n        this.key = key;\n    }\n    getChecked(): boolean {\n        return this.checked;\n    }\n\n    setChecked(check: boolean): void {\n        this.checked = check;\n    }\n\n    getDocCount(): number {\n        return this.docCount;\n    }\n    setDocCount(docCount: number): void {\n        this.docCount = docCount;\n    }\n}\n","import {Citation} from './citation';\nimport {Description} from './description';\nimport {Linkage} from './linkage';\nimport {Type} from 'class-transformer';\nimport {UpperLabel} from './upperLabel';\n\n// every dataset\nexport class Hit {\n    private title: string;\n    private id: string;\n    private titleUrl: string;\n    private titleTooltip: string;\n    @Type(() => Description)\n    private description: Array<Description>;\n    // the colorful labels on the top of every dataset\n    @Type(() => UpperLabel)\n    private upperLabels: Array<UpperLabel>;\n    private licence: Array<string>;\n    // every dataset can contain images or videos or sound tracks\n    private multimediaObjs: Array<any>;\n    private vat: boolean;\n    private latitude: string;\n    private longitude: string;\n    private vatTooltip: string;\n    @Type(() => Citation)\n    private citation: Citation;\n    // it contains the information related to the download of the dataset\n    @Type(() => Linkage)\n    private linkage: Linkage;\n    // it contains the information related to the download of the dataset\n    private metadatalink: string;\n    // it contains the information related to the download of the dataset\n    private dcIdentifier: string;\n    // every dataset can be shown on the map with an specific color\n    private color: string;\n    // most of the information of the dataset is in the xml\n    private xml: string;\n    // if this dataset has been selected by the user\n    private checkbox: boolean;\n\n    //\n    private datalink: string;\n\n    private parentIdentifier: string;\n\n    private dcType: Array<string>;\n\n    getTitle(): string {\n        return this.title;\n    }\n\n    setTitle(title: string): void {\n        this.title = title;\n    }\n\n    getId(): string {\n        return this.id;\n    }\n\n    setId(id: string): void {\n        this.id = id;\n    }\n\n    getColor(): string {\n        return this.color;\n    }\n\n    setColor(color: string): void {\n        this.color = color;\n    }\n\n    getMetadatalink(): string {\n        return this.metadatalink;\n    }\n\n    setMetadatalink(metadatalink: string): void {\n        if(metadatalink != \"undefined\" && metadatalink != null)\n        {\n            this.metadatalink = encodeURI(metadatalink);\n        }else{\n            this.metadatalink = null;\n        }\n        \n        // this.metadatalink = metadatalink;\n    }\n\n    getIdentifier(): string {\n        return this.dcIdentifier;\n    }\n\n    setIdentifier(dcIdentifier: string): void {\n        this.dcIdentifier = dcIdentifier;\n    }\n\n    getLinkage(): Linkage {\n        return this.linkage;\n    }\n\n    setLinkage(linkage: Linkage): void {\n        this.linkage = linkage;\n    }\n\n    getXml(): string {\n        return this.xml;\n    }\n\n    setXml(xml: string): void {\n        this.xml = xml;\n    }\n\n    getTitleUrl(): string {\n        return this.titleUrl;\n    }\n\n    setTitleUrl(titleUrl: string): void {\n        if(titleUrl != \"undefined\" && titleUrl != null)\n        {\n            this.titleUrl = encodeURI(titleUrl);\n        }else{\n            this.titleUrl = null;\n        }\n\n        // this.titleUrl = titleUrl;\n    }\n\n    getDescription(): Array<Description> {\n        return this.description;\n    }\n\n    setDescription(description: Array<Description>): void {\n        this.description = description;\n    }\n\n    getUpperLabels(): Array<UpperLabel> {\n        return this.upperLabels;\n    }\n\n    setUpperLabels(upperLabels: Array<UpperLabel>): void {\n        this.upperLabels = upperLabels;\n    }\n\n    getLicence(): Array<string> {\n        return this.licence;\n    }\n\n    setLicence(licence: Array<string>): void {\n        this.licence = licence;\n    }\n\n    getVat(): boolean {\n        return this.vat;\n    }\n\n    setVat(vat: boolean): void {\n        this.vat = vat;\n    }\n\n    getVatTooltip(): string {\n        return this.vatTooltip;\n    }\n\n    setVatTooltip(vatTooltip: string): void {\n        this.vatTooltip = vatTooltip;\n    }\n\n    getCitation(): Citation {\n        return this.citation;\n    }\n\n    setCitation(citation: Citation): void {\n        this.citation = citation;\n    }\n\n    getMultimediaObjs(): Array<any> {\n        return this.multimediaObjs;\n    }\n\n    setMultimediaObjs(multimediaObjs: Array<any>): void {\n        this.multimediaObjs = multimediaObjs;\n    }\n\n    getLatitude(): string {\n        return this.latitude;\n    }\n\n    setLatitude(latitude: string): void {\n        this.latitude = latitude;\n    }\n\n    getLongitude(): string {\n        return this.longitude;\n    }\n\n    setLongitude(longitude: string): void {\n        this.longitude = longitude;\n    }\n\n    getTitleTooltip(): string {\n        return this.titleTooltip;\n    }\n\n    setTitleTooltip(titleTooltip: string): void {\n        this.titleTooltip = titleTooltip;\n    }\n\n    getCheckBox(): boolean {\n        return this.checkbox;\n    }\n\n    setCheckbox(checkbox: boolean): void {\n        this.checkbox = checkbox;\n    }\n\n    getDatalink(): string {\n        return this.datalink;\n    }\n\n    setDatalink(datalink: string): void {\n        if(datalink != \"undefined\" && datalink != null)\n        {\n            this.datalink = encodeURI(datalink);\n        }else{\n            this.datalink = null;\n        }\n\n        // this.datalink = datalink;\n    }\n\n    getParentIdentifier(): string {\n        return this.parentIdentifier;\n    }\n\n    setParentIdentifier(parentIdentifier: string): void {\n        this.parentIdentifier = parentIdentifier;\n    }\n\n    getType(): Array<string> {\n        return this.dcType;\n    }\n\n    setType(dcType: Array<string>): void {\n        this.dcType = dcType;\n    }\n}\n","// it contains the information related to the download of the dataset\nexport class Linkage {\n    private data: string;\n    private metadata: string;\n    private multimedia: Array<any>;\n\n    getData(): string {\n        return this.data;\n    }\n\n    setData(data: string): void {\n        this.data = data;\n    }\n\n    getMetadata(): string {\n        return this.metadata;\n    }\n\n    setMetadata(metadata: string): void {\n        if(metadata != \"undefined\" && metadata != null)\n        {\n            this.metadata = encodeURI(metadata);\n        }else{\n            this.metadata = null;\n        }\n\n        // this.metadata = metadata;\n    }\n    getMultimedia(): Array<any> {\n        return this.multimedia;\n    }\n\n    setMultimedia(multimedia: Array<any>): void {\n        this.multimedia = multimedia;\n    }\n}\n","import {Aggregation} from './aggregation';\nimport {Hit} from './hit';\n\n// the response from server\nexport class Result {\n    // the response from server contains several datasets\n    private hits: Hit[];\n    // the extended semantic keys related to the search key\n    private semanticKeys: [];\n    private termData: [];\n    // the number of founded datasets related to the search key\n    private totalNumber: number;\n    // filters which contains facets(it changes in every request)\n    private aggregations: Aggregation[];\n    // the filters which don't change by new request\n    private otherFilters: Array<any>;\n    private datePickers: Array<any>;\n\n    getHits(): Hit[] {\n        return this.hits;\n    }\n\n    setHits(hits: Hit[]): void {\n        this.hits = hits;\n    }\n\n    getOtherFilters(): Array<any> {\n        return this.otherFilters;\n    }\n\n    setOtherFilters(otherFilters: Array<any>): void {\n        this.otherFilters = otherFilters;\n    }\n\n    getDatePickers(): Array<any> {\n        return this.datePickers;\n    }\n\n    setDatePickers(datePickers: Array<any>): void {\n        this.datePickers = datePickers;\n    }\n\n    getSemanticKeys(): string[] {\n        return this.semanticKeys;\n    }\n\n    setSemanticKeys(semanticKeys: []): void {\n        this.semanticKeys = semanticKeys;\n    }\n\n    getTermData(): string[] {\n        return this.termData;\n    }\n\n    setTermData(termData: []): void {\n        this.termData = termData;\n    }\n\n    getAggregations(): Aggregation[] {\n        return this.aggregations;\n    }\n\n    setAggregations(aggregations: Aggregation[]): void {\n        this.aggregations = aggregations;\n    }\n\n    getTotalNumber(): number {\n        return this.totalNumber;\n    }\n\n    setTotalNumber(totalNumber: number): void {\n        this.totalNumber = totalNumber;\n    }\n}\n","// the colorful labels on the upper side of every dataset\nexport class UpperLabel{\n    // the text inside the label\n    private innerInfo: string;\n    // the tooltip which will be shown by hovering over the label\n    private tooltip: string;\n    // the color class in the css file to show the color of the label\n    private colorClass: string;\n\n    getInnerInfo(): string {\n        return this.innerInfo;\n    }\n\n    setInnerInfo(innerInfo: string): void {\n        this.innerInfo = innerInfo;\n    }\n    getTooltip(): string {\n        return this.tooltip;\n    }\n\n    setTooltip(tooltip: string): void {\n        this.tooltip = tooltip;\n    }\n    getColorClass(): string {\n        return this.colorClass;\n    }\n\n    setColorClass(colorClass: string): void {\n        this.colorClass = colorClass;\n    }\n}\n","import {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges} from '@angular/core';\nimport {Result} from '../models/result/result';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\n\n@Component({\n    selector: 'app-pagination',\n    templateUrl: './pagination.component.html',\n    styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent implements OnChanges {\n    @Input() result!: Result;\n    @Output() paginationClicked = new EventEmitter<any>();\n    items = [];\n    pageOfItems: Array<any>;\n    counter = 2;\n    entries = 0;\n    isSend = false;\n    maxPageNum = 10;\n\n    constructor(breakpointObserver: BreakpointObserver) {\n        breakpointObserver.observe([\n            Breakpoints.HandsetLandscape,\n            Breakpoints.HandsetPortrait\n        ]).subscribe(result => {\n            if (result.matches) {\n                this.maxPageNum = 3;\n            }\n        });\n    }\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes?.result?.currentValue?.getTotalNumber() !== changes?.result?.previousValue?.getTotalNumber()){\n            if (!isNaN(changes?.result?.currentValue?.getTotalNumber())){\n                this.items = Array(changes?.result?.currentValue?.getTotalNumber()).fill(0);\n                this.entries = changes?.result?.currentValue?.getTotalNumber();\n            }\n        }\n    }\n    onChangePage(pageOfItems: Array<any>): void {\n        // update current page of items\n        this.pageOfItems = pageOfItems;\n        if (this.isSend) {\n            const elements = document.querySelector('.pagination .active');\n            const index = Number((elements as HTMLElement).innerText);\n            const from = (index - 1) * 10;\n            this.paginationClicked.emit(from);\n            this.isSend = false;\n        }\n    }\n}\n","<div>\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                <div>{{entries}} entries found</div>\n            </div>\n            <div class=\"col-md-9\">\n                <div *ngIf=\"items.length!==0\">\n                    <jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\" (click)=\"isSend = true\" [maxPages]=\"maxPageNum\"></jw-pagination>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, EventEmitter, OnInit, Output, Input } from \"@angular/core\";\nimport { NodeService } from \"../services/remote/node.service\";\nimport { CommunicationService } from \"../services/local/communication.service\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { StartSearchingService } from \"../services/local/start-searching.service\";\nimport { environment } from \"../../environments/environment\";\nimport * as booleanParser from \"boolean-parser\";\nimport { InputAnalysisService } from \"../services/local/input-analysis.service\";\n\n@Component({\n  selector: \"app-search-input\",\n  templateUrl: \"./search-input.component.html\",\n  styleUrls: [\"./search-input.component.css\"],\n})\nexport class SearchInputComponent implements OnInit {\n  constructor(\n    private nodeService: NodeService,\n    private startSearchingService: StartSearchingService,\n    private communicationService: CommunicationService,\n    private inputAnalysis: InputAnalysisService\n  ) {}\n\n  faSearch = faSearch;\n  @Input() searchKey: any;\n  @Output() searchKeyEmmit = new EventEmitter<any>();\n  result: any;\n  windowSuggestion = false;\n  @Input() semanticValue: boolean;\n  formatSimpleSearch = /[!@#$%^&_\\-=\\[\\]{};:\\\\,<>\\/?]+/;\n  formatSemanticSearch = /[!@#$%^&_\\-=\\[\\]{};:\\\\,<>\\/?]+/;\n  alertSearch = false;\n  alertSemanticSearch = false;\n  semSearchImg: string = environment.imagePath + environment.semSearchImg;\n\n  ngOnInit(): void {\n    // const str = 'fff (gg tt gg) hhh (jj vv + cc gg) lll + kkk + rrr bee*';\n    // console.log(str);\n    // this.inputAnalysis.getAnalysis(str).then((response) => console.log(response));\n  }\n\n  // by entering a letter on the form, a request will be sent to the node server and then it will be sent to suggestion-window\n  onWindowSuggestKey(value): void {\n    if (value !== undefined) {\n      const searchField = document.getElementById(\n        \"searchField\"\n      ) as HTMLInputElement;\n      if (searchField) {\n        searchField.value = value;\n      }\n      this.searchKey = value;\n      this.alertSearch = this.formatSimpleSearch.test(this.searchKey);\n      this.alertSemanticSearch = false;\n      this.startSearching(this.semanticValue);\n      this.windowSuggestion = false;\n    }\n  }\n\n  // by clicking on the search button, this method will be called\n  onSearch(): void {\n    this.semanticValue = false;\n    this.alertSearch = this.formatSimpleSearch.test(this.searchKey);\n    this.alertSemanticSearch = false;\n    this.startSearching(this.semanticValue);\n  }\n\n  // by clicking on the semantic search button, this method will be called\n  semantic(): void {\n    this.semanticValue = true;\n    this.alertSearch = false;\n    this.alertSemanticSearch = this.formatSemanticSearch.test(this.searchKey);\n    this.startSearching(this.semanticValue);\n\n    const subject = this.communicationService.getSearchKey();\n    subject.next(this.searchKey);\n    subject.subscribe((value) => {\n      this.searchKey = value;\n    });\n  }\n\n  startSearching(semantic: boolean): void {\n    if (\n      this.searchKey.endsWith(\"*\") &&\n      this.searchKey.length < 6 &&\n      semantic === true\n    ) {\n      alert(environment.textAlertWordLength);\n    } else {\n      this.inputAnalysis\n        .getAnalysis2(this.searchKey, semantic)\n        .then((response) => {\n          console.log(response);\n          const keyAndSemantic = [response, semantic];\n          // console.log(keyAndSemantic);\n          this.searchKeyEmmit.emit(keyAndSemantic);\n        });\n      // const keyAndSemantic = [this.searchKey, semantic];\n      // this.searchKeyEmmit.emit(keyAndSemantic);\n    }\n  }\n\n  onSuggest(): void {\n    this.nodeService.suggestSimple(this.searchKey).subscribe((data) => {\n      this.communicationService.setSuggest(data.suggest[0].options);\n      this.windowSuggestion = data.suggest[0].options.length !== 0;\n    });\n  }\n}\n","<div>\n  <form (ngSubmit)=\"onSearch()\" autocomplete=\"off\">\n    <div class=\"input-group\">\n      <input\n        #searchInput\n        type=\"text\"\n        [(ngModel)]=\"searchKey\"\n        (ngModelChange)=\"onSuggest()\"\n        [ngModelOptions]=\"{ standalone: true }\"\n        class=\"form-control\"\n        placeholder=\"Search...\"\n      />\n      <div class=\"input-group-append\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-outline-primary fw-bold\"\n          id=\"button-search\"\n        >\n          Search\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-primary fw-bold\"\n          (click)=\"semantic()\"\n        >\n          Semantic Search\n        </button>\n      </div>\n    </div>\n    <div class=\"position-relative\">\n      <div class=\"suggestion-window\" *ngIf=\"windowSuggestion\">\n        <app-suggestion-window\n          (windowSuggestKey)=\"onWindowSuggestKey($event)\"\n          (isClicked)=\"windowSuggestion = false\"\n        ></app-suggestion-window>\n      </div>\n    </div>\n  </form>\n  <div class=\"text-danger ml-1\" *ngIf=\"alertSearch\">\n    <div>Please do not use these special characters in a search:</div>\n    <div>!@#$%^&_+-=[];':\\|,<>/?{{ \"{}\" }}</div>\n  </div>\n</div>\n\n<!-- <div> -->\n<!--   <form (ngSubmit)=\"onSearch()\" autocomplete=\"off\"> -->\n<!--     <div class=\"input-group\"> -->\n<!--       <input -->\n<!--         #searchInput -->\n<!--         type=\"text\" -->\n<!--         [(ngModel)]=\"searchKey\" -->\n<!--         (ngModelChange)=\"onSuggest()\" -->\n<!--         [ngModelOptions]=\"{ standalone: true }\" -->\n<!--         class=\"form-control\" -->\n<!--         placeholder=\"Search...\" -->\n<!--       /> -->\n<!--       <div class=\"input-group-append\"> -->\n<!--         <button -->\n<!--           type=\"submit\" -->\n<!--           class=\"btn btn-outline-primary fw-bold\" -->\n<!--           id=\"button-search\" -->\n<!--         > -->\n<!--           Search -->\n<!--         </button> -->\n<!--         <button -->\n<!--           type=\"button\" -->\n<!--           class=\"btn btn-outline-primary fw-bold\" -->\n<!--           (click)=\"semantic()\" -->\n<!--         > -->\n<!--           Semantic Search -->\n<!--         </button> -->\n<!--       </div> -->\n<!--     </div> -->\n<!--   </form> -->\n<!--   <div class=\"position-relative\"> -->\n<!--     <div class=\"suggestion-window\" *ngIf=\"windowSuggestion\"> -->\n<!--       <app-suggestion-window -->\n<!--         (windowSuggestKey)=\"onWindowSuggestKey($event)\" -->\n<!--         (isClicked)=\"windowSuggestion = false\" -->\n<!--         (selectSuggestion)=\"onSelectSuggestion($event)\" -->\n<!--       ></app-suggestion-window> -->\n<!--     </div> -->\n<!--   </div> -->\n<!--   <div class=\"text-danger ml-1\" *ngIf=\"alertSearch\"> -->\n<!--     <div>Please do not use these special characters in a search:</div> -->\n<!--     <div>!@#$%^&_+-=[];':\\|,<>/?{{ \"{}\" }}</div> -->\n<!--   </div> -->\n<!-- </div> -->\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Description} from '../../models/result/description';\n\n@Component({\n  selector: 'app-description',\n  templateUrl: './description.component.html',\n  styleUrls: ['./description.component.css']\n})\nexport class DescriptionComponent implements OnInit {\n  @Input() des: Description;\n  showMore = false;\n  constructor() { }\n\n  ngOnInit(): void {\n    //console.log(this.des);\n  }\n  showLess(length): boolean {\n    if (this.showMore === true) {\n      return true;\n    }else {\n      return length <= 400;\n    }\n  }\n\n}\n","<div class=\"d-flex\">\n    <div class=\"mr-2\">{{des.getTitle()}}</div>\n    <div>\n        <div [innerHTML]=\"des.getValue()\" [ngClass]=\"{'showLess':!showLess(des.getValue().length)}\"\n             class=\"d-inline-block\"></div>\n        <span *ngIf=\"des.getValue()?.length>400\" style=\"vertical-align: super\">\n                            <span class=\"linkBlue\" *ngIf=\"!showMore\" (click)=\"showMore=true\">\n                                [+]\n                            </span>\n                            <span class=\"linkBlue\" *ngIf=\"showMore\" (click)=\"showMore=false\">\n                                [-]\n                            </span>\n                        </span>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { faVideo } from \"@fortawesome/free-solid-svg-icons\";\nimport { faImage } from \"@fortawesome/free-solid-svg-icons\";\nimport { faDownload } from \"@fortawesome/free-solid-svg-icons\";\nimport { CitationComponent } from \"../../citation/citation.component\";\nimport { CommunicationService } from \"../../services/local/communication.service\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Hit } from \"../../models/result/hit\";\nimport { ViewEncapsulation } from \"@angular/core\";\nimport { environment } from \"../../../environments/environment\";\n\n@Component({\n  selector: \"app-result-item\",\n  templateUrl: \"./result-item.component.html\",\n  styleUrls: [\"./result-item.component.css\"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ResultItemComponent implements OnInit {\n  @Input() item: Hit;\n  @Input() itemId;\n  faVolumeUp = faVolumeUp;\n  faDownload = faDownload;\n  faVideo = faVideo;\n  faImage = faImage;\n  faQuoteLeft = faQuoteLeft;\n\n  vatImg: string = environment.imagePath + environment.vatImg;\n  imagePath: string = environment.imagePath;\n\n  @Output() checkBoxItem = new EventEmitter<any>();\n\n  constructor(\n    private communicationService: CommunicationService,\n    private sanitizer: DomSanitizer,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {}\n\n  openDialog(i): void {\n    this.communicationService.setCitation(i);\n    const dialogRef = this.dialog.open(CitationComponent, {\n      data: this.item,\n    });\n  }\n\n  sanitize(url: string): any {\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n  checkBox(key, value): void {\n    this.item.setCheckbox(value.checked);\n    this.checkBoxItem.emit(this.item);\n  }\n}\n","<div>\n  <div class=\"my-2\">\n    <span *ngFor=\"let label of item.getUpperLabels()\">\n      <span\n        class=\"labeling\"\n        [ngClass]=\"label.getColorClass()\"\n        [matTooltip]=\"label.getTooltip()\"\n        matTooltipClass=\"result-item-tooltip\"\n        >{{ label.getInnerInfo() }}</span\n      >\n    </span>\n  </div>\n\n  <div class=\"d-flex justify-content-between line-bottom\">\n    <div class=\"pl-0 pb-3 d-flex\">\n      <div class=\"colorBox\" [style.background-color]=\"item.getColor()\"></div>\n      <div>\n        <div\n          [matTooltip]=\"item.getTitleTooltip()\"\n          matTooltipClass=\"result-item-tooltip\"\n        >\n          <div\n            *ngIf=\"item.getTitleUrl() === 'undefined'\"\n            [innerHTML]=\"item.getTitle()\"\n          ></div>\n          <a\n            *ngIf=\"item.getTitleUrl() !== 'undefined'\"\n            href=\"{{ item.getTitleUrl() }}\"\n            target=\"_blank\"\n          >\n            <div [innerHTML]=\"item.getTitle()\"></div>\n          </a>\n        </div>\n        <div *ngFor=\"let des of item.getDescription(); let i = index\">\n          <app-description [des]=\"des\"></app-description>\n        </div>\n        <div class=\"mt-2\">\n          <!--Grey elements in result item-->\n          <div class=\"d-inline-block\">\n            <div\n              *ngFor=\"let licence of item.getLicence()\"\n              class=\"d-inline-block pr-2 result-item-grey\"\n            >\n              <img\n                *ngIf=\"licence !== 'Other' && licence !== 'All rights reserved'\"\n                src=\"{{ imagePath }}{{ licence + '.png' }}\"\n                class=\"license-img\"\n                matTooltip=\"License: {{ licence }}\"\n                matTooltipClass=\"result-item-tooltip\"\n              />\n              <span\n                *ngIf=\"licence === 'Other'\"\n                matTooltip=\"Custom license\"\n                matTooltipClass=\"result-item-tooltip\"\n                ><svg\n                  width=\"2em\"\n                  height=\"2em\"\n                  viewBox=\"0 0 16 16\"\n                  class=\"bi bi-award\"\n                  fill=\"currentColor\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    d=\"M9.669.864L8 0 6.331.864l-1.858.282-.842 1.68-1.337 1.32L2.6 6l-.306 1.854 1.337 1.32.842 1.68 1.858.282L8 12l1.669-.864 1.858-.282.842-1.68 1.337-1.32L13.4 6l.306-1.854-1.337-1.32-.842-1.68L9.669.864zm1.196 1.193l-1.51-.229L8 1.126l-1.355.702-1.51.229-.684 1.365-1.086 1.072L3.614 6l-.25 1.506 1.087 1.072.684 1.365 1.51.229L8 10.874l1.356-.702 1.509-.229.684-1.365 1.086-1.072L12.387 6l.248-1.506-1.086-1.072-.684-1.365z\"\n                  />\n                  <path\n                    d=\"M4 11.794V16l4-1 4 1v-4.206l-2.018.306L8 13.126 6.018 12.1 4 11.794z\"\n                  /></svg\n              ></span>\n              <span\n                *ngIf=\"licence === 'All rights reserved'\"\n                matTooltip=\"All rights reserved\"\n                matTooltipClass=\"result-item-tooltip\"\n                >All rights reserved</span\n              >\n            </div>\n          </div>\n          <!-- TODO:  <20-09-22, claas> fix functionality first -->\n          <!-- <img *ngIf=\"item.getVat()\" src=\"{{vatImg}}\" class=\"vat-img pr-2\" -->\n          <!--      [matTooltip]=\"item.getVatTooltip()\" matTooltipClass=\"result-item-tooltip\">&nbsp; -->\n          <!--Blue elements in result item-->\n          <span\n            *ngIf=\"\n              item.getCitation().getSource() !== undefined &&\n              item.getCitation().getCreator() !== []\n            \"\n            (click)=\"openDialog(itemId)\"\n            class=\"pr-2 result-item-blue\"\n            matTooltip=\"Show citation\"\n            matTooltipClass=\"result-item-tooltip\"\n            ><span><fa-icon class=\"fa-sm\" [icon]=\"faQuoteLeft\"></fa-icon></span>\n            Citation\n          </span>\n          <span\n            *ngFor=\"let obj of item.getMultimediaObjs()\"\n            class=\"pr-2 vertical-middle\"\n          >\n            <a\n              *ngIf=\"obj.type === 'sound'\"\n              [href]=\"sanitize(obj.url)\"\n              target=\"_blank\"\n              matTooltip=\"This dataset provides a sound file.\"\n              matTooltipClass=\"result-item-tooltip\"\n              ><fa-icon [icon]=\"faVolumeUp\"></fa-icon> Sound\n            </a>\n            <a\n              *ngIf=\"obj.type === 'video'\"\n              [href]=\"sanitize(obj.url)\"\n              target=\"_blank\"\n              matTooltip=\"This dataset provides a video.\"\n              matTooltipClass=\"result-item-tooltip\"\n              ><fa-icon [icon]=\"faVideo\"></fa-icon> Video\n            </a>\n            <a\n              *ngIf=\"obj.type === 'picture'\"\n              [href]=\"sanitize(obj.url)\"\n              target=\"_blank\"\n              matTooltip=\"This dataset provides an image.\"\n              matTooltipClass=\"result-item-tooltip\"\n              ><fa-icon [icon]=\"faImage\"></fa-icon> Image\n            </a>\n          </span>\n          <span>\n            <a\n              *ngIf=\"item.getType().includes('ABCD_Dataset')\"\n              [href]=\"item.getLinkage().getData()\"\n              class=\"btn btn-sm btn-primary\"\n              download\n              ><fa-icon [icon]=\"faDownload\"></fa-icon> Dataset</a\n            >\n          </span>\n        </div>\n      </div>\n    </div>\n    <div>\n      <div class=\"form-group form-check\">\n        <input\n          (change)=\"checkBox(itemId, $event.target)\"\n          type=\"checkbox\"\n          class=\"regular-checkbox big-checkbox\"\n          [checked]=\"item.getCheckBox()\"\n        />\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {Result} from '../models/result/result';\nimport {BasketDialogComponent} from '../basket-dialog/basket-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {NodeService} from '../services/remote/node.service';\nimport {Hit} from '../models/result/hit';\nimport {plainToClass} from 'class-transformer';\nimport {KeycloakService} from 'keycloak-angular';\n\n@Component({\n    selector: 'app-search-result',\n    templateUrl: './search-result.component.html',\n    styleUrls: ['./search-result.component.css']\n})\nexport class SearchResultComponent implements OnInit, OnChanges {\n    semantic: boolean;\n    @Input() result = new Result();\n    basketValues: Array<Hit> = [];\n    @Output() from = new EventEmitter<any>();\n    @Output() mapItem = new EventEmitter<any>();\n    popoverVisible = '';\n    user;\n    basketId;\n\n    constructor(public dialog: MatDialog, private nodeService: NodeService, private keycloakService: KeycloakService) {\n    }\n\n    ngOnInit(): void {\n        try {\n            this.user = this.keycloakService.getUsername();\n\n            if (this.user !== undefined) {\n                this.nodeService.readFromBasket(this.user).subscribe(result => {\n                    if (result.length !== 0) {\n                        const basket = JSON.parse(result[0]?.basketcontent)?.selected;\n                        basket.forEach(item => {\n                            const hit: Hit = plainToClass(Hit, item);\n                            this.basketValues.push(hit);\n                        });\n                        this.mapItem.emit(this.basketValues);\n                    }\n                });\n            } else {\n                this.user = null;\n            }\n            // console.log('ngOnInit() search-result.components | this.user : ', this.user);\n        } catch {\n            this.user = null;\n        }\n\n        this.basketId = null;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes?.result?.currentValue !== changes?.result?.previousValue) {\n            this.controlCheckboxes(this.basketValues);\n        }\n    }\n\n    checkBoxClick(item: Hit): void {\n        // console.log('checkBoxClick(item: Hit): void | ...');\n        if (item.getCheckBox()) {\n            this.basketValues.push(item);\n        } else {\n            const index = this.basketValues.indexOf(item);\n            this.basketValues.splice(index, 1);\n        }\n        this.mapItem.emit(this.basketValues);\n    }\n\n    basketClick(): void {\n        // console.log('basketClick(): void | ...');\n        const dialogRef = this.dialog.open(BasketDialogComponent, {\n            data: this.basketValues,\n            disableClose: true\n        });\n        dialogRef.afterClosed().subscribe(basketValues => {\n\n            this.basketValues = basketValues[0];\n            this.result.getHits().forEach(resultValue => {\n                resultValue.setCheckbox(false);\n            });\n            this.controlCheckboxes(this.basketValues);\n            this.mapItem.emit(this.basketValues);\n        });\n    }\n\n    controlCheckboxes(basketValues): void {\n        basketValues.forEach(basketValue => {\n            const basketId = basketValue.getId();\n            this.result.getHits().forEach(resultValue => {\n                const resultId = resultValue.getId();\n                if (resultId === basketId) {\n                    resultValue.setCheckbox(true);\n                }\n            });\n        });\n    }\n\n    paginationClicked(from): void {\n        this.from.emit(from);\n    }\n}\n","<div>\n    <div class=\"basket mb-3\" (click)=\"basketClick()\">\n        <div class=\"basket-img\">\n            <img src=\"assets/img/basket.png\" class=\"w-100\">\n            <span class=\"basket-number Absolute-Center\">{{basketValues.length}}</span>\n        </div>\n        <span class=\"basket-text\">Dataset Basket</span>\n    </div>\n    <div *ngIf=\"result?.getHits()?.length!== 0\">\n        <app-pagination [result]=\"result\" (paginationClicked)=\"paginationClicked($event)\"></app-pagination>\n    </div>\n    <div *ngIf=\"result?.getHits()?.length=== 0\" class=\"text-danger\">No entries found</div>\n    <div *ngIf=\"result?.getSemanticKeys()!== undefined\">\n        <span>Expanded terms: </span>\n        <span *ngFor=\"let item of result?.getSemanticKeys()\" class=\"highlightedKey\">\n\n            <!-- only display a context-box for the hovered semantic key -->\n            <div (mouseover)=\"popoverVisible=item\" (mouseleave)=\"popoverVisible=''\">\n                {{item}}\n                <div [hidden]=\"popoverVisible!=item\">\n                    <app-context-box [term]=\"item\" [termData]=\"result?.getTermData()\"></app-context-box>\n                </div>\n            </div>\n\n        </span>\n    </div>\n    <ngx-spinner></ngx-spinner>\n    <div *ngIf=\"result?.getHits()?.length!==0\">\n        <div *ngFor=\"let item of result?.getHits(); let i=index\" class=\"pt-1\">\n\t\t\t<app-result-item [item]=\"item\" [itemId]=\"i\" (checkBoxItem)=\"checkBoxClick($event)\"></app-result-item>\n            \n        </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {Result} from '../../models/result/result';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommunicationService {\n    private filter: Array<any> = [];\n    private suggest: BehaviorSubject<any>;\n    private searchKey: any;\n    private urlIndex = '/gfbio';\n    private IsSearchKey: BehaviorSubject<boolean>;\n    private IsSemantic: boolean;\n    private pagination: number;\n    private result: BehaviorSubject<Result>;\n    private citation: BehaviorSubject<any>;\n    private removedFilter: BehaviorSubject<any>;\n\n    constructor() {\n        // @ts-ignore\n        this.suggest = new BehaviorSubject<any>();\n        // @ts-ignore\n        this.searchKey = new BehaviorSubject<any>();\n        // @ts-ignore\n        this.result = new BehaviorSubject<any>();\n        // @ts-ignore\n        this.citation = new BehaviorSubject<any>();\n        // @ts-ignore\n        this.removedFilter = new BehaviorSubject<any>();\n        // @ts-ignore\n        this.IsSearchKey = new BehaviorSubject<any>();\n    }\n    setSuggest(suggest: string): void {\n        this.suggest.next(suggest);\n    }\n\n    getSuggest(): Observable<string> {\n        return this.suggest.asObservable();\n    }\n    setIsSearchKey(IsSearchKey: boolean): void {\n        this.IsSearchKey.next(IsSearchKey);\n    }\n    getIsSearchKey(): Observable<boolean> {\n        return this.IsSearchKey.asObservable();\n    }\n    setIsSemantic(IsSemantic: boolean): void {\n        this.IsSemantic = IsSemantic;\n    }\n    getIsSemantic(): boolean {\n        return this.IsSemantic;\n    }\n    setPagination(key: number): void {\n        this.pagination = key;\n    }\n    getPagination(): number {\n        return this.pagination;\n    }\n    setUrlIndex(key: string): void {\n        this.urlIndex = key;\n    }\n    getUrlIndex(): string {\n        return this.urlIndex;\n    }\n    setSearchKey(key: any): void {\n        this.searchKey = key;\n    }\n    getSearchKey(): any {\n        return this.searchKey;\n    }\n    setFilter(key: Array<any>): void {\n        this.filter = key;\n    }\n\n    getFilter(): Array<any> {\n        return this.filter;\n    }\n\n    setResult(key: Result): void {\n        this.result.next(key);\n    }\n\n    getResult(): Observable<Result> {\n        return this.result;\n    }\n    setCitation(key: number): void {\n        this.citation.next(key);\n    }\n\n    getCitation(): Observable<number> {\n        return this.citation;\n    }\n    setRemovedFilter(key: any): void {\n        this.removedFilter.next(key);\n    }\n\n    getRemovedFilter(): Observable<any> {\n        return this.removedFilter;\n    }\n    xmltoJson(xmlStr): any{\n        // @ts-ignore\n        const convert = require('xml-js');\n        let xml =\n            '<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\n            xmlStr;\n        xml = convert.xml2json(xml, {compact: false, spaces: 4});\n        return JSON.parse(xml);\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Result } from \"../../models/result/result\";\nimport { Hit } from \"../../models/result/hit\";\nimport { Citation } from \"../../models/result/citation\";\nimport { CommunicationService } from \"./communication.service\";\nimport { Aggregation } from \"../../models/result/aggregation\";\nimport { Facet } from \"../../models/result/facet\";\nimport { Description } from \"../../models/result/description\";\nimport { Linkage } from \"../../models/result/linkage\";\nimport { UpperLabel } from \"../../models/result/upperLabel\";\nimport { environment } from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GfbioPreprocessDataService {\n  constructor(private communicationService: CommunicationService) {}\n\n  public static dataCenter = environment.dataCenter;\n  public static dataType = environment.dataType;\n  public static parameter = environment.parameter;\n  public static taxonomy = environment.taxonomy;\n  public static geographicRegion = environment.geographicRegion;\n  public static type = environment.type;\n  public static datacenterTooltips = environment.datacenterTooltips;\n  private id;\n  private colors = environment.colors;\n  private vatTooltip = environment.vatTooltip;\n  private noCoordinates = environment.noCoordinates;\n\n  /*maps the json which comes from the server to the Result class, it is the most important function in this service,\n    other functions can be deleted according to the json response\n    this method gets the json object and an array of parameters which are necessary for mapping*/\n  getResult(jsonObject, parameters: Array<any>): Result {\n    this.id = 10;\n    const result = new Result();\n    result.setSemanticKeys(jsonObject?.lastItem);\n    const hits: Hit[] = this.getHits(jsonObject, parameters[0]);\n    result.setHits(hits);\n    result.setAggregations(this.getAggregations(jsonObject));\n    result.setTotalNumber(jsonObject?.hits?.total);\n    result.setOtherFilters(this.getOtherFilters());\n    result.setDatePickers(this.getDatePickers());\n    result.setTermData(jsonObject?.termData);\n    return result;\n  }\n\n  // maps the datasets\n  getHits(jsonObject, semantic): Hit[] {\n    const hits: Hit[] = [];\n    const hitsOfObject = jsonObject?.hits?.hits;\n    hitsOfObject.forEach((item) => {\n      hits.push(this.getHit(item, semantic));\n    });\n    return hits;\n  }\n\n  // maps the citation data\n  getCitation(item, titleURL): Citation {\n    const citation = new Citation();\n    const xmlStr = item?.xml;\n    const jsonResult =\n      this.communicationService.xmltoJson(xmlStr)?.elements?.[0]?.elements;\n    const creator = [];\n    jsonResult.forEach((value) => {\n      switch (value?.name) {\n        case \"dc:title\": {\n          citation.setTitle(value?.elements?.[0]?.text);\n          break;\n        }\n        case \"dc:creator\": {\n          creator.push(value?.elements?.[0]?.text);\n          break;\n        }\n        case \"dc:date\": {\n          citation.setDate(value?.elements?.[0]?.text);\n          break;\n        }\n      }\n    });\n    citation.setDOI(titleURL);\n    let dataCenter = item?.dataCenter.split(\" \").pop();\n    if (dataCenter === \"Science\") {\n      dataCenter = \"PANGAEA\";\n    }\n    citation.setDataCenter(dataCenter);\n    citation.setSource(item?.citation_source);\n    citation.setCreator(creator);\n    return citation;\n  }\n\n  // maps the title\n  getTopic(dataset, semantic): string {\n    const dom = document\n      .createRange()\n      .createContextualFragment(dataset?._source?.[\"html-1\"]);\n    let topic = \"\";\n    dom?.querySelectorAll(\".citation span\").forEach((spanValue) => {\n      topic = topic + spanValue.innerHTML;\n      if (spanValue.classList.contains(\"date\")) {\n        topic = topic + \": \";\n      }\n    });\n    if (semantic) {\n      const highLightTitle = dataset?.highlight?.citation_title?.[0];\n      let matchTitle = highLightTitle?.replace(/<em>/g, \"\");\n      matchTitle = matchTitle?.replace(/<\\/em>/g, \"\");\n      topic = topic?.replace(matchTitle, highLightTitle);\n    }\n    return topic;\n  }\n\n  // maps the url title\n  getTopicUrl(dom): string {\n    const titleURL = dom?.querySelector(\".citation a\")?.getAttribute(\"href\");\n    if (titleURL === undefined || titleURL === \"undefined\") {\n      return \"undefined\";\n    } else {\n      return titleURL;\n    }\n  }\n\n  getTitleTooltip(hit: Hit): string {\n    if (hit.getLatitude !== undefined && hit.getLongitude() !== undefined) {\n      return (\n        \"min latitude: \" +\n        hit.getLatitude() +\n        \", max longitude: \" +\n        hit.getLongitude()\n      );\n    } else {\n      return this.noCoordinates;\n    }\n  }\n\n  // maps the licenses\n  getLicense(dataset): [] {\n    let license = dataset?._source?.licenseShort;\n    if (!Array.isArray(license)) {\n      license = [license];\n    }\n    license.forEach((l, i) => {\n      const allLicences = [\n        \"CC BY\",\n        \"CC BY-NC\",\n        \"CC BY-NC-ND\",\n        \"CC BY-NC-SA\",\n        \"CC BY-ND\",\n        \"CC BY-SA\",\n        \"CC0\",\n        \"GPL\",\n        \"All rights reserved\",\n      ];\n      if (!allLicences.includes(l)) {\n        license[i] = \"Other\";\n      }\n    });\n    return license;\n  }\n\n  // maps a dataset\n  getHit(item, semantic): Hit {\n    const source = item?._source;\n    const hit = new Hit();\n    hit.setId(item?._id);\n    const dom = document\n      .createRange()\n      .createContextualFragment(source?.[\"html-1\"]);\n    hit.setTitleUrl(this.getTopicUrl(dom));\n    hit.setTitle(this.getTopic(item, semantic));\n    hit.setUpperLabels(this.getLabels(source));\n    hit.setCitation(this.getCitation(source, this.getTopicUrl(dom)));\n    hit.setLicence(this.getLicense(item));\n    hit.setVat(source?.vatVisualizable);\n    hit.setVatTooltip(this.vatTooltip);\n    hit.setXml(source?.xml);\n    hit.setLongitude(source?.maxLongitude);\n    hit.setLatitude(source?.minLatitude);\n    hit.setTitleTooltip(this.getTitleTooltip(hit));\n    hit.setMetadatalink(source?.metadatalink);\n    hit.setDatalink(source?.datalink);\n    // set array of descriptions\n    const tr = dom?.querySelectorAll(\".desc tr\");\n    const description = [];\n    tr.forEach((row) => {\n      const title = row?.querySelectorAll(\"td\")?.[0]?.innerHTML;\n      const value = row?.querySelectorAll(\"td\")?.[1]?.innerHTML;\n      if (title === \"Parameters:\" || title === \"Summary:\") {\n        const descriptionItem = new Description();\n        descriptionItem.setTitle(title);\n        descriptionItem.setValue(value);\n        description.push(descriptionItem);\n      }\n    });\n    // if the search is semantic, puts the highlighted words in <em></em> tag\n    if (semantic) {\n      const highLightDescription = item?.highlight?.description;\n      if (\n        highLightDescription !== undefined &&\n        highLightDescription.length > 0\n      ) {\n        highLightDescription.forEach((entry) => {\n          const entryCopy = entry;\n          entry = entry?.replace(/<em>/g, \"\");\n          entry = entry?.replace(/<\\/em>/g, \"\");\n          description.forEach((row) => {\n            row.value = row.value?.replace(entry, entryCopy);\n          });\n        });\n      }\n    }\n    // in order to extract some properties from xml, I converted it from string to xml format\n    // the properties that are going to be extracted are: identifier, linkage and MultimediaObjs\n    const xml = this.communicationService.xmltoJson(source?.xml)?.elements?.[0]\n      ?.elements;\n    const multimediaObjs: Array<any> = [];\n    const types: Array<string> = [];\n    const linkage = new Linkage();\n    let relation = \"\";\n    xml.forEach((element) => {\n      if (\"elements\" in element) {\n        if (element.name === \"dc:identifier\") {\n          hit.setIdentifier(element.elements[0].text);\n        }\n        if (element.name === \"dc:type\") {\n          types.push(element.elements[0].text);\n        }\n        if (element.name === \"parentIdentifier\") {\n          hit.setParentIdentifier(element.elements[0].text);\n        }\n        if (element.name === \"linkage\") {\n          if (element.attributes.type === \"multimedia\") {\n            const text = element.elements[0].text;\n            const differentTypes = [\n              [\".mp3\", \"sound\"],\n              [\".mp4\", \"video\"],\n              [\".jpg\", \"picture\"],\n              [\".tiff\", \"picture\"],\n              [\".png\", \"picture\"],\n              [\".wav\", \"sound\"],\n            ];\n            differentTypes.forEach((types) => {\n              if (text.includes(types[0])) {\n                const multimediaObj = {\n                  type: types[1],\n                  url: text,\n                };\n                multimediaObjs.push(multimediaObj);\n              }\n            });\n            linkage.setMultimedia(multimediaObjs);\n          }\n\n          if (element.attributes.type === \"metadata\") {\n            linkage.setMetadata(element.elements[0].text);\n          }\n          if (element.attributes.type === \"data\") {\n            linkage.setData(element.elements[0].text);\n          }\n        }\n        // some information related to description (relation) should be extracted from xml\n        if (element.name === \"dc:relation\") {\n          let value = element.elements[0].text;\n          if (value.startsWith(\"http\")) {\n            value = \"<a \" + 'href = \"' + value + '\" >' + value + \"</a>\";\n          }\n          relation = relation + \"<li>\" + value + \"</li>\";\n        }\n      }\n    });\n\n    if (relation !== \"\") {\n      const descriptionItem = new Description();\n      descriptionItem.setTitle(\"Relation:\");\n      descriptionItem.setValue(\"<ul>\" + relation + \"</ul>\");\n      description.push(descriptionItem);\n    }\n    hit.setType(types);\n    hit.setLinkage(linkage);\n    hit.setDescription(description);\n    hit.setMultimediaObjs(multimediaObjs);\n    if (hit.getLatitude() !== undefined) {\n      this.id--;\n      hit.setColor(this.colors[this.id]);\n    }\n    return hit;\n  }\n\n  // maps labels\n  getLabels(item): UpperLabel[] {\n    const upperLabels: UpperLabel[] = [];\n    // if the citation date exist, a blue label will be created\n    if (item?.citation_date) {\n      const year = new UpperLabel();\n      year.setInnerInfo(item?.citation_date?.substring(0, 4));\n      year.setTooltip(\"Publication year\");\n      year.setColorClass(\"bg-label-blue\");\n      upperLabels.push(year);\n    }\n    // if the dataset is open access, a green label will be created\n    if (!item?.accessRestricted) {\n      const access = new UpperLabel();\n      access.setInnerInfo(\"Open Access\");\n      access.setTooltip(\n        \"This dataset is open access. You can use primary data and metadata.\"\n      );\n      access.setColorClass(\"bg-label-green\");\n      upperLabels.push(access);\n    }\n    // the label related to the datacenter with the golden red color will be created\n    // it contains the name of the datacenter\n    const dataCenter = new UpperLabel();\n    /*as the name of the datacenter which is provided in the json result is a long string and no short version\n        was provided, the short version was extracted by some if statements*/\n    dataCenter.setInnerInfo(item?.dataCenter.split(\" \").pop());\n    if (dataCenter.getInnerInfo() === \"Science\") {\n      dataCenter.setInnerInfo(\"PANGAEA\");\n    }\n    if (dataCenter.getInnerInfo() === \"Archive\") {\n      dataCenter.setInnerInfo(\"ENA\");\n    }\n    switch (dataCenter.getInnerInfo()) {\n      case \"SNSB\":\n        dataCenter.setTooltip(\n          GfbioPreprocessDataService.datacenterTooltips.SNSB\n        );\n        break;\n      case \"SGN\":\n        dataCenter.setTooltip(\n          GfbioPreprocessDataService.datacenterTooltips.SGN\n        );\n        break;\n      case \"BGBM\":\n        dataCenter.setTooltip(\n          GfbioPreprocessDataService.datacenterTooltips.BGBM\n        );\n        break;\n      case \"MfN\":\n        dataCenter.setTooltip(\n          GfbioPreprocessDataService.datacenterTooltips.MfN\n        );\n        break;\n      case \"ZFMK\":\n        dataCenter.setTooltip(\n          GfbioPreprocessDataService.datacenterTooltips.ZFMK\n        );\n        break;\n      case \"SMNS\":\n        dataCenter.setTooltip(\n          GfbioPreprocessDataService.datacenterTooltips.SMNS\n        );\n        break;\n      case \"PANGAEA\":\n        dataCenter.setTooltip(\n          GfbioPreprocessDataService.datacenterTooltips.PANGAEA\n        );\n        break;\n      case \"DSMZ\":\n        dataCenter.setTooltip(\n          GfbioPreprocessDataService.datacenterTooltips.DSMZ\n        );\n        break;\n      case \"Gatersleben\":\n        dataCenter.setTooltip(\n          GfbioPreprocessDataService.datacenterTooltips.Gatersleben\n        );\n        break;\n      case \"ENA\":\n        dataCenter.setTooltip(\n          GfbioPreprocessDataService.datacenterTooltips.ENA\n        );\n        break;\n      default:\n        dataCenter.setTooltip(\"Publisher\");\n    }\n    dataCenter.setColorClass(\"bg-goldenrod\");\n    upperLabels.push(dataCenter);\n\n    return upperLabels;\n  }\n\n  // maps facets\n  getAggregations(jsonObject): Aggregation[] {\n    const titles = [\n      GfbioPreprocessDataService.dataCenter,\n      GfbioPreprocessDataService.dataType,\n      GfbioPreprocessDataService.parameter,\n      GfbioPreprocessDataService.taxonomy,\n      GfbioPreprocessDataService.type,\n      GfbioPreprocessDataService.geographicRegion,\n    ];\n    const aggregationsJson = jsonObject?.aggregations;\n    const values = Object.values(aggregationsJson);\n    const keys = Object.keys(aggregationsJson);\n    const aggregations: Aggregation[] = [];\n    // tslint:disable-next-line:forin\n    for (const i in values) {\n      const aggregation = new Aggregation();\n      aggregation.setId(String(keys[i]));\n      aggregation.setTitle(titles[i]);\n      aggregation.setIcon(this.selectIcon(aggregation.getTitle()));\n      const buckets: Facet[] = [];\n      // @ts-ignore\n      values[i].buckets.forEach((item) => {\n        const bucket = new Facet();\n        bucket.setDocCount(item?.doc_count);\n        bucket.setKey(item?.key);\n        buckets.push(bucket);\n      });\n      aggregation.setFacets(buckets);\n      aggregations.push(aggregation);\n    }\n    return aggregations;\n  }\n\n  // maps other filters\n  getOtherFilters(): Array<any> {\n    return [\n      {\n        icon: \"map\",\n        title: \"Visualizable in VAT\",\n        parameters: [\n          {\n            label: \"Visualizable in VAT\",\n            parameterType: \"vatVisualizable\",\n            parameterValue: true,\n            id: \"vatVisualizable\",\n          },\n        ],\n      },\n      {\n        icon: \"lock_outline\",\n        title: \"Access\",\n        parameters: [\n          {\n            label: \"access is restricted\",\n            parameterType: \"accessRestricted\",\n            parameterValue: true,\n            id: \"accessRestricted\",\n          },\n          {\n            label: \"open access only\",\n            parameterType: \"accessRestricted\",\n            parameterValue: false,\n            id: \"accessOpen\",\n          },\n        ],\n      },\n      {\n        icon: \"image\",\n        title: \"Multimedia Object\",\n        parameters: [\n          {\n            label: \"images, videos, sound files\",\n            parameterType: \"parameterFacet\",\n            parameterValue: \"Multimedia Object\",\n            id: \"Multimedia\",\n          },\n        ],\n      },\n    ];\n  }\n\n  // maps datepicker filters\n  getDatePickers(): Array<any> {\n    return [\n      {\n        icon: \"date_range\",\n        title: \"Collection Date\",\n        type: \"collection\",\n        inputs: [\n          {\n            id: \"collectionStart\",\n            name: \"Collection start date\",\n            type: \"start date\",\n          },\n          {\n            id: \"collectionEnd\",\n            name: \"Collection end date\",\n            type: \"end date\",\n          },\n        ],\n      },\n      {\n        icon: \"date_range\",\n        title: \"Publication Date\",\n        type: \"publication\",\n        inputs: [\n          {\n            id: \"publicationStart\",\n            name: \"Publication start date\",\n            type: \"start date\",\n          },\n          {\n            id: \"publicationEnd\",\n            name: \"Publication end date\",\n            type: \"end date\",\n          },\n        ],\n      },\n    ];\n  }\n\n  // available icons: https://jossef.github.io/material-design-icons-iconfont/\n  selectIcon(filter): string {\n    // default icon\n    let icon = \"filter_list\";\n    switch (filter) {\n      case GfbioPreprocessDataService.dataCenter: {\n        icon = \"storage\";\n        break;\n      }\n      case GfbioPreprocessDataService.dataType: {\n        icon = \"domain\";\n        break;\n      }\n      case GfbioPreprocessDataService.geographicRegion: {\n        icon = \"location_on\";\n        break;\n      }\n      case GfbioPreprocessDataService.taxonomy: {\n        icon = \"account_tree\";\n        break;\n      }\n      case GfbioPreprocessDataService.parameter: {\n        icon = \"table_view\";\n        break;\n      }\n      case GfbioPreprocessDataService.type: {\n        icon = \"auto_awesome_motion\";\n        break;\n      }\n    }\n    return icon;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NodeService} from '../remote/node.service';\nimport fastCartesian from 'fast-cartesian';\nimport Tokenizr from 'tokenizr';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class InputAnalysisService {\n\n    constructor(private nodeService: NodeService) {\n    }\n\n    async getAnalysis(str, semantic): Promise<Array<string>> {\n        // const lexer = new Tokenizr();\n        // lexer.rule(/[a-zA-Z_][a-zA-Z0-9_]*/, (ctx, match) => {\n        //     ctx.accept('string');\n        // });\n        // lexer.rule(/\"((?:\\\\\"|[^\\r\\n])*)\"/, (ctx, match) => {\n        //     ctx.accept('string', match[1].replace(/\\\\\"/g, '\"'));\n        // });\n        // lexer.rule(/((?:\\\\\"|[^\\r\\n])*)/, (ctx, match) => {\n        //     ctx.accept('string', match[1].replace(/\\\\\"/g, '\"'));\n        // });\n        // lexer.rule(/\\/\\/[^\\r\\n]*\\r?\\n/, (ctx, match) => {\n        //     ctx.ignore();\n        // });\n        // lexer.rule(/[ \\t\\r\\n]+/, (ctx, match) => {\n        //     ctx.ignore();\n        // });\n        // lexer.rule(/[+-]+/, (ctx, match) => {\n        //     ctx.accept('string');\n        // });\n        // // lexer.input('\\\" mooo ggg\\\" + sea sss');\n        // lexer.input(' (mooo ggg) + sea sss');\n        // lexer.tokens().forEach((token) => {\n        //     console.log(token.toString());\n        // });\n        // str = str.replaceAll(' + ', '+');\n        let numOpenParan = 0;\n        const words = str.split(' ');\n        let finalString = [];\n        let insidePar = '';\n        for (let i = 0; i < words.length; i += 1) {\n            const word = words[i];\n            if (word.indexOf('*') > -1) {\n                const star = await this.starAnalysis(word, semantic);\n                if (star !== null) {\n                    star.unshift(word + ',');\n                    finalString = finalString.concat(star);\n                }\n            }\n            numOpenParan = this.getNumParentheses(words[i], numOpenParan);\n            if (numOpenParan !== 0) {\n                // if (words[i + 1] !== '+' && words[i + 1] !== '|' && words[i] !== '+' && words[i] !== '|'\n                //     && i !== words.length - 1) {\n                //     words[i] = words[i] + ' ';\n                // }\n                insidePar = insidePar + ' ' + words[i];\n            } else {\n                if (insidePar !== '') {\n                    insidePar = insidePar + ' ' + words[i];\n                    finalString = finalString.concat(insidePar.trim());\n                    insidePar = '';\n                } else {\n                    finalString = finalString.concat(words[i]);\n                }\n            }\n        }\n        for (let i = 0; i < finalString.length; i += 1) {\n            finalString[i] = finalString[i].replaceAll('+', ' + ');\n            finalString[i] = finalString[i].replaceAll('(', '');\n            finalString[i] = finalString[i].replaceAll(')', '');\n            finalString[i] = finalString[i].replaceAll('\\\"', '');\n            finalString[i] = finalString[i].replaceAll('  ', ' ');\n            if (finalString[i] === ' + ') {\n                finalString[i] = finalString[i - 1] + ' + ' + finalString[i + 1];\n                finalString.splice(i + 1, 1);\n                finalString.splice(i - 1, 1);\n            }\n        }\n        return finalString;\n    }\n\n    async getAnalysis2(str, semantic): Promise<Array<string>> {\n        let words = str.split(' ');\n        let isParOpen = 'no';\n        let insidePar = '';\n        const finalArray = [];\n        for (let i = 0; i < words.length; i += 1) {\n            const word = words[i];\n            if (word.indexOf('*') > -1) {\n                const star = await this.starAnalysis(word.slice(0, -1), semantic);\n                if (star !== null) {\n                    star.unshift(word);\n                    words[i] = star;\n                }\n            }\n        }\n        for (let i = words.length - 1; i >= 0; i -= 1) {\n            if (!Array.isArray(words[i])) {\n                isParOpen = this.getIsParOpen(words[i], isParOpen);\n                if (isParOpen === 'first' || isParOpen === 'last' || isParOpen === 'middle') {\n                    insidePar = words[i] + ' ' + insidePar;\n                }\n                if (isParOpen === 'first' || isParOpen === 'middle') {\n                    words[i + 1] = insidePar.trim();\n                    words.splice(i, 1);\n                }\n                if (isParOpen === 'first') {\n                    insidePar = '';\n                }\n            }\n        }\n        for (let i = words.length - 1; i >= 0; i -= 1) {\n            if (words[i] === '+') {\n                if (!Array.isArray(words[i - 1])) {\n                    words[i - 1] = [words[i - 1]];\n                }\n                if (!Array.isArray(words[i + 1])) {\n                    words[i + 1] = [words[i + 1]];\n                }\n                words[i + 1] = fastCartesian([\n                    words[i - 1],\n                    words[i + 1],\n                ]);\n                words.splice(i - 1, 2);\n            }\n        }\n        words = words.flat();\n\n        for (let i = 0; i < words.length; i += 1) {\n            if (Array.isArray(words[i])) {\n                finalArray.push(words[i].join(' + '));\n            } else {\n                finalArray.push(words[i]);\n            }\n        }\n        return finalArray;\n    }\n\n    getIsParOpen(word, isParOpen): string {\n        if ((word.startsWith('(') || word.startsWith('\\'')) && (word.endsWith(')') || word.endsWith('\\''))) {\n            return 'no';\n        }\n        if (word.startsWith('(') || word.startsWith('\\'')) {\n            return 'first';\n        }\n        if (word.endsWith(')') || word.endsWith('\\'')) {\n            return 'last';\n        }\n        if (isParOpen === 'last') {\n            return 'middle';\n        }\n        return 'no';\n    }\n\n    getNumParentheses(word, numOpenParentheses): number {\n        if (word.startsWith('(') || word.startsWith('\\'')) {\n            numOpenParentheses++;\n        }\n        if (word.endsWith(')') || word.endsWith('\\'')) {\n            numOpenParentheses--;\n        }\n        return numOpenParentheses;\n    }\n\n    starAnalysis(word, semantic): any {\n        return new Promise(resolve => {\n            if (!semantic) {\n                this.nodeService.suggestSimple(word.slice(0, -1)).subscribe(data => {\n                    const keysText = [];\n                    const keys = data.suggest[0].options;\n                    keys.forEach((element) => {\n                        const str = element.text;\n                        keysText.push(str);\n                    });\n                    resolve(keysText);\n                });\n            } else {\n                this.nodeService.suggestTerminology(word.slice(0, -1)).subscribe(data => {\n                    const keysText = [];\n                    const keys = data.results;\n                    keys.forEach((element) => {\n                        const str = element.label;\n                        keysText.push(str);\n                    });\n                    resolve(keysText);\n                });\n            }\n        });\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {NodeService} from '../remote/node.service';\nimport {CommunicationService} from './communication.service';\nimport {GfbioPreprocessDataService} from './gfbio-preprocess-data.service';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StartSearchingService {\n\n    constructor(private nodeService: NodeService, private communicationService: CommunicationService,\n                private gfbioPreprocessData: GfbioPreprocessDataService) {\n    }\n\n    startSearching(searchKey, semantic, from, filters): void {\n        let urlTerm: string;\n        const urlIndex = environment.context;\n        let body: any;\n        let key;\n        if (semantic === true) {\n            key = searchKey;\n            urlTerm = environment.semSearchUrl;\n        } else {\n            key = searchKey.join(' ');\n            urlTerm = environment.searchUrl;\n        }\n        // console.log(key);\n        body = JSON.stringify({\n            queryterm: key, from,\n            size: 10, filter: filters\n        });\n        this.nodeService.search(\n            urlIndex + urlTerm,\n            body,\n            this.gfbioPreprocessData, [semantic]);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {NgxSpinnerService} from 'ngx-spinner';\nimport {CommunicationService} from '../local/communication.service';\nimport {Result} from '../../models/result/result';\nimport {environment} from '../../../environments/environment';\nimport {gfbioEnvironment} from \"../../../environments/gfbio.environment\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodeService {\n    url = environment.apiUrl;\n    suggestPanUrl = environment.context + environment.suggestPanUrl;\n    suggestTerUrl = environment.context + environment.suggestTerUrl;\n    basketURL = environment.context + environment.basketUrl;\n    addToBasketUrl = environment.context + environment.addToBasketUrl;\n    deleteFromBasketUrl = environment.context + environment.deleteFromBasket;\n    deleteAllBasketUrl = environment.context + environment.deleteAllBasket;\n    readFromBasketUrl = environment.context + environment.readFromBasketUrl;\n    semantic = false;\n    headers: { 'Content-Type': string } = {'Content-Type': 'application/json'};\n\n    constructor(private http: HttpClient, private spinner: NgxSpinnerService,\n                private communicationService: CommunicationService) {\n    }\n\n    search(urlTerm, body, serviceType, otherParameters: Array<any>): any {\n        // console.log(body);\n        this.spinner.show();\n        const headers = this.headers;\n        this.http.post<any>(this.url + urlTerm, body, {headers}).subscribe(data => {\n            let results: Result;\n            results = serviceType.getResult(data, otherParameters);\n            this.communicationService.setResult(results);\n            // console.log(results);\n            // console.log(data);\n            this.spinner.hide();\n        }, err => {\n            alert(environment.textAlertSemSearchError);\n            this.spinner.hide();\n        });\n    }\n\n    suggestSimple(key): any {\n        const body = {\n            term: key\n        };\n        const headers = this.headers;\n        return this.http.post<any>(this.url + this.suggestPanUrl, body, {headers});\n    }\n\n    suggestTerminology(key): any {\n        const body = {\n            term: key\n        };\n        const headers = this.headers;\n        return this.http.post<any>(this.url + this.suggestTerUrl, body, {headers});\n    }\n\n    addToBasket(itemInDatabase): any {\n        return this.http.post<any>(this.url + this.addToBasketUrl, itemInDatabase);\n    }\n\n    readFromBasket(userId): any {\n        return this.http.get<any>(this.url + this.readFromBasketUrl + userId);\n    }\n\n    deleteFromBasket(itemInDatabase): any {\n        return this.http.post<any>(this.url + this.deleteFromBasketUrl, itemInDatabase);\n    }\n\n    deleteAllBasket(userId): any {\n        return this.http.post<any>(this.url + this.deleteAllBasketUrl, {userId});\n    }\n\n    basketDownload(baskets): any {\n        // console.log('basketDownload | baskets');\n        // console.log(baskets);\n        // console.log('post to this.url ', this.url, ' | this.basketURL ', this.basketURL);\n        return this.http.post(this.url + this.basketURL, baskets, {responseType: 'blob'});\n    }\n\n    postBasketToCollection(baskets, userId): any {\n        // console.log('postBasketToCollection | baskets');\n        // console.log(baskets);\n        const headers = {\n            accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Token ${gfbioEnvironment.COLLECTIONS_API_TOKEN}`,\n\n        };\n        // console.log('Here a http post to collection service will take place');\n        // TODO: I think it is exactly this payload but sended to collectionservice host\n        return this.http.post(gfbioEnvironment.COLLECTIONS_API_URL, {\n            set: baskets.basket,\n            external_user_id: userId\n        }, {headers});\n    }\n\n    narrow(id, uri): any {\n        const body = {\n            id,\n            uri\n        };\n        const headers = this.headers;\n        return this.http.post<any>(this.url + '/gfbio/narrow', body, {headers});\n    }\n\n    broad(id, uri): any {\n        const body = {\n            id,\n            uri\n        };\n        const headers = this.headers;\n        return this.http.post<any>(this.url + '/gfbio/broad', body, {headers});\n    }\n}\n","import {\n  Component,\n  EventEmitter,\n  HostListener,\n  OnInit,\n  Output,\n} from \"@angular/core\";\nimport { CommunicationService } from \"../services/local/communication.service\";\n\n@Component({\n  selector: \"app-suggestion-window\",\n  templateUrl: \"./suggestion-window.component.html\",\n  styleUrls: [\"./suggestion-window.component.css\"],\n})\nexport class SuggestionWindowComponent implements OnInit {\n  suggest: any;\n  constructor(private communicationService: CommunicationService) {}\n  @Output() windowSuggestKey = new EventEmitter<any>();\n  @Output() isClicked = new EventEmitter<any>();\n  ngOnInit(): void {\n    this.communicationService\n      .getSuggest()\n      .subscribe((suggest) => (this.suggest = suggest));\n  }\n  chooseSuggestion(suggestionKey): void {\n    this.windowSuggestKey.emit(suggestionKey);\n  }\n  @HostListener(\"document:click\", [\"$event\"])\n  documentClick(event: MouseEvent): void {\n    this.isClicked.emit();\n  }\n}\n","<div>\n  <div class=\"transparentWindow\"></div>\n  <div class=\"windowBox\">\n    <div\n      *ngFor=\"let item of suggest\"\n      class=\"option\"\n      (click)=\"chooseSuggestion(item.text)\"\n    >\n      {{ item.text }}\n    </div>\n  </div>\n</div>\n","import { KeycloakService } from 'keycloak-angular';\nimport {environment} from '../../environments/environment';\n\nexport function initializeKeycloak(keycloak: KeycloakService): () => Promise<boolean> {\n    return () =>\n    keycloak.init({\n        config: {\n            url: environment.Keycloak_Url,\n            realm: environment.Keycloak_Realm,\n            clientId: environment.Keycloak_ClientId\n        },\n        initOptions: {\n            //onLoad: 'check-sso',\n            checkLoginIframe: true,\n            checkLoginIframeInterval: 25\n        },\n        //loadUserProfileAtStartUp: true\n    });\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  \n  Keycloak_Url: 'https://keycloak.sso.gwdg.de/auth',\n  Keycloak_RedirectUri: 'https://dev.gfbio.uni-jena.de/daisi',\n  Keycloak_Realm: 'GFBio',\n  Keycloak_ClientId: 'dev-gfbio-angular',\n  \n  apiUrl: 'http://localhost:3000',\n  context: '/gfbio',\n  searchUrl: '/search',\n  semSearchUrl: '/semantic-search',\n  suggestUrl: '/suggest',\n  suggestPanUrl: '/suggest-pan',\n  suggestTerUrl: '/suggest-ter',\n  basketUrl: '/basketDownload',\n  addToBasketUrl: '/addToBasket',\n  deleteFromBasket: '/deleteFromBasket',\n  deleteAllBasket: '/deleteAllBasket',\n  readFromBasketUrl: '/api/baskets/user/',\n  imagePath: 'assets/img/',\n  vatImg: 'vat.png',\n  semSearchImg: 'icon_semsearch3.png',\n  textAlertSemSearchError: 'A connection error occured. Please reduce the amount of search terms or try the search again.',\n  textAlertWordLength: 'please choose a word longer than 4 letters to use the * in semantic search',\n  textAlertBasketErrorDownload: 'An error occured during the download.\\nPlease contact the administrator for more information.',\n  textTooltipBasketVATvisualizable: 'dataset can be visualized in VAT',\n  textTooltipBasketVATnotVisualizable: 'dataset can not be visualized in VAT',\n  textTooltipBasketDataAvailable: 'data are available for download',\n  textTooltipBasketDataNotAvailable: 'data are not available for download',\n  textTooltipBasketMetadataAvailable: 'metadata are available for download',\n  textTooltipBasketMetadataNotAvailable: 'metadata are not available for download',\n  textTooltipBasketMultimediaAvailable: 'multimedia are available for download',\n  textTooltipBasketMultimediaNotAvailable: 'multimedia are not available for download',\n  textTooltipBasketRemove: 'remove dataset from basket',\n  textTooltipBasketRemoveSure: 'Are you sure that you want to empty the basket?',\n  textTooltipBasketEmpty: 'Please select a dataset from the search result.',\n  textTSWidgetInfo: 'Your search query is expanded with relational terms obtained from GFBio\\'s ' +\n      'Terminology Service. Some terms can be further expanded with more narrower or broader terms. ' +\n      'Click on the buttons to obtain all descendants or an ancestor. With a double-click on the returned ' +\n      'narrower or broader terms you can add them to the search field.',\n  dataCenter: 'Data Center',\n  dataType: 'Data Type',\n  parameter: 'Parameter',\n  taxonomy: 'Taxonomy',\n  geographicRegion: 'Geographic Region',\n  type: 'Type',\n  colors: ['#94e851', '#f52f57', '#173b4e', '#ee82ee', '#ffff00', '#27408b', '#009acd', '#ff00ff', '#8b0000', '#00fa9a'],\n  noCoordinates: 'This dataset has no coordinates and can not be located on the map.',\n  vatTooltip: 'This dataset can be transfered to VAT.',\n  datacenterTooltips : {\n      SNSB: 'This dataset is provided by Staatliche Naturwissenschaftliche ' +\n          'Sammlungen Bayerns; SNSB IT Center, M;nchen (SNSB).',\n      SGN: 'This dataset is provided by Senckenberg Gesellschaft f;r Naturforschung; Leibniz Institute Frankfurt (SGN).',\n      BGBM: 'This dataset is provided by Botanic Garden and Botanical Museum Berlin, Freie Universit;t Berlin (BGBM).',\n      MfN: 'This dataset is provided by Leibniz Institute for Research on Evolution and Biodiversity, Berlin (MfN).',\n      ZFMK: 'This dataset is provided by Zoological Research Museum Alexander Koenig; Leibniz ' +\n          'Institute for Animal Biodiversity, Bonn (ZFMK).',\n      SMNS: 'This dataset is provided by State Museum of Natural History Stuttgart (SMNS).',\n      PANGAEA: 'This dataset is provided by Data Publisher for Earth; Environmental Science  (PANGAEA).',\n      DSMZ: 'This dataset is provided by Leibniz Institute DSMZ; German Collection of Microorganisms ' +\n          'and Cell Cultures, Braunschweig (DSMZ).',\n      Gatersleben: 'e!DAL;PGP ; Plant Genomics and Phenomics Research Data Repository, ' +\n          'Leibniz Institute of Plant Genetics and Crop Plant Research (IPK) Gatersleben',\n\t  ENA: 'European Nucleotide Archive'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","export const gfbioEnvironment = {\n    production: true,\n    COLLECTIONS_API_URL: 'https://collections.gfbio.dev/api/collections/',\n    COLLECTIONS_API_TOKEN: 'API_TOKEN_HERE'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","var map = {\n\t\"./af\": 8685,\n\t\"./af.js\": 8685,\n\t\"./ar\": 254,\n\t\"./ar-dz\": 4312,\n\t\"./ar-dz.js\": 4312,\n\t\"./ar-kw\": 2614,\n\t\"./ar-kw.js\": 2614,\n\t\"./ar-ly\": 8630,\n\t\"./ar-ly.js\": 8630,\n\t\"./ar-ma\": 8674,\n\t\"./ar-ma.js\": 8674,\n\t\"./ar-sa\": 9032,\n\t\"./ar-sa.js\": 9032,\n\t\"./ar-tn\": 4730,\n\t\"./ar-tn.js\": 4730,\n\t\"./ar.js\": 254,\n\t\"./az\": 3052,\n\t\"./az.js\": 3052,\n\t\"./be\": 150,\n\t\"./be.js\": 150,\n\t\"./bg\": 3069,\n\t\"./bg.js\": 3069,\n\t\"./bm\": 3466,\n\t\"./bm.js\": 3466,\n\t\"./bn\": 8516,\n\t\"./bn-bd\": 557,\n\t\"./bn-bd.js\": 557,\n\t\"./bn.js\": 8516,\n\t\"./bo\": 6273,\n\t\"./bo.js\": 6273,\n\t\"./br\": 9588,\n\t\"./br.js\": 9588,\n\t\"./bs\": 9815,\n\t\"./bs.js\": 9815,\n\t\"./ca\": 3331,\n\t\"./ca.js\": 3331,\n\t\"./cs\": 1320,\n\t\"./cs.js\": 1320,\n\t\"./cv\": 2219,\n\t\"./cv.js\": 2219,\n\t\"./cy\": 8266,\n\t\"./cy.js\": 8266,\n\t\"./da\": 6427,\n\t\"./da.js\": 6427,\n\t\"./de\": 7435,\n\t\"./de-at\": 2871,\n\t\"./de-at.js\": 2871,\n\t\"./de-ch\": 2994,\n\t\"./de-ch.js\": 2994,\n\t\"./de.js\": 7435,\n\t\"./dv\": 2357,\n\t\"./dv.js\": 2357,\n\t\"./el\": 5649,\n\t\"./el.js\": 5649,\n\t\"./en-au\": 9961,\n\t\"./en-au.js\": 9961,\n\t\"./en-ca\": 9878,\n\t\"./en-ca.js\": 9878,\n\t\"./en-gb\": 3924,\n\t\"./en-gb.js\": 3924,\n\t\"./en-ie\": 864,\n\t\"./en-ie.js\": 864,\n\t\"./en-il\": 1579,\n\t\"./en-il.js\": 1579,\n\t\"./en-in\": 940,\n\t\"./en-in.js\": 940,\n\t\"./en-nz\": 6181,\n\t\"./en-nz.js\": 6181,\n\t\"./en-sg\": 4301,\n\t\"./en-sg.js\": 4301,\n\t\"./eo\": 5291,\n\t\"./eo.js\": 5291,\n\t\"./es\": 4529,\n\t\"./es-do\": 3764,\n\t\"./es-do.js\": 3764,\n\t\"./es-mx\": 2584,\n\t\"./es-mx.js\": 2584,\n\t\"./es-us\": 3425,\n\t\"./es-us.js\": 3425,\n\t\"./es.js\": 4529,\n\t\"./et\": 5203,\n\t\"./et.js\": 5203,\n\t\"./eu\": 678,\n\t\"./eu.js\": 678,\n\t\"./fa\": 3483,\n\t\"./fa.js\": 3483,\n\t\"./fi\": 6262,\n\t\"./fi.js\": 6262,\n\t\"./fil\": 2521,\n\t\"./fil.js\": 2521,\n\t\"./fo\": 4555,\n\t\"./fo.js\": 4555,\n\t\"./fr\": 3131,\n\t\"./fr-ca\": 8239,\n\t\"./fr-ca.js\": 8239,\n\t\"./fr-ch\": 1702,\n\t\"./fr-ch.js\": 1702,\n\t\"./fr.js\": 3131,\n\t\"./fy\": 267,\n\t\"./fy.js\": 267,\n\t\"./ga\": 3821,\n\t\"./ga.js\": 3821,\n\t\"./gd\": 1753,\n\t\"./gd.js\": 1753,\n\t\"./gl\": 4074,\n\t\"./gl.js\": 4074,\n\t\"./gom-deva\": 2762,\n\t\"./gom-deva.js\": 2762,\n\t\"./gom-latn\": 5969,\n\t\"./gom-latn.js\": 5969,\n\t\"./gu\": 2809,\n\t\"./gu.js\": 2809,\n\t\"./he\": 5402,\n\t\"./he.js\": 5402,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 410,\n\t\"./hr.js\": 410,\n\t\"./hu\": 8288,\n\t\"./hu.js\": 8288,\n\t\"./hy-am\": 7928,\n\t\"./hy-am.js\": 7928,\n\t\"./id\": 1334,\n\t\"./id.js\": 1334,\n\t\"./is\": 6959,\n\t\"./is.js\": 6959,\n\t\"./it\": 4864,\n\t\"./it-ch\": 1124,\n\t\"./it-ch.js\": 1124,\n\t\"./it.js\": 4864,\n\t\"./ja\": 6141,\n\t\"./ja.js\": 6141,\n\t\"./jv\": 9187,\n\t\"./jv.js\": 9187,\n\t\"./ka\": 2136,\n\t\"./ka.js\": 2136,\n\t\"./kk\": 4332,\n\t\"./kk.js\": 4332,\n\t\"./km\": 8607,\n\t\"./km.js\": 8607,\n\t\"./kn\": 4305,\n\t\"./kn.js\": 4305,\n\t\"./ko\": 234,\n\t\"./ko.js\": 234,\n\t\"./ku\": 6003,\n\t\"./ku.js\": 6003,\n\t\"./ky\": 5061,\n\t\"./ky.js\": 5061,\n\t\"./lb\": 2786,\n\t\"./lb.js\": 2786,\n\t\"./lo\": 6183,\n\t\"./lo.js\": 6183,\n\t\"./lt\": 29,\n\t\"./lt.js\": 29,\n\t\"./lv\": 4169,\n\t\"./lv.js\": 4169,\n\t\"./me\": 8577,\n\t\"./me.js\": 8577,\n\t\"./mi\": 8177,\n\t\"./mi.js\": 8177,\n\t\"./mk\": 337,\n\t\"./mk.js\": 337,\n\t\"./ml\": 5260,\n\t\"./ml.js\": 5260,\n\t\"./mn\": 2325,\n\t\"./mn.js\": 2325,\n\t\"./mr\": 4695,\n\t\"./mr.js\": 4695,\n\t\"./ms\": 5334,\n\t\"./ms-my\": 7151,\n\t\"./ms-my.js\": 7151,\n\t\"./ms.js\": 5334,\n\t\"./mt\": 3570,\n\t\"./mt.js\": 3570,\n\t\"./my\": 7963,\n\t\"./my.js\": 7963,\n\t\"./nb\": 8028,\n\t\"./nb.js\": 8028,\n\t\"./ne\": 6638,\n\t\"./ne.js\": 6638,\n\t\"./nl\": 302,\n\t\"./nl-be\": 6782,\n\t\"./nl-be.js\": 6782,\n\t\"./nl.js\": 302,\n\t\"./nn\": 3501,\n\t\"./nn.js\": 3501,\n\t\"./oc-lnc\": 563,\n\t\"./oc-lnc.js\": 563,\n\t\"./pa-in\": 869,\n\t\"./pa-in.js\": 869,\n\t\"./pl\": 5302,\n\t\"./pl.js\": 5302,\n\t\"./pt\": 9687,\n\t\"./pt-br\": 4884,\n\t\"./pt-br.js\": 4884,\n\t\"./pt.js\": 9687,\n\t\"./ro\": 9107,\n\t\"./ro.js\": 9107,\n\t\"./ru\": 3627,\n\t\"./ru.js\": 3627,\n\t\"./sd\": 355,\n\t\"./sd.js\": 355,\n\t\"./se\": 3427,\n\t\"./se.js\": 3427,\n\t\"./si\": 1848,\n\t\"./si.js\": 1848,\n\t\"./sk\": 4590,\n\t\"./sk.js\": 4590,\n\t\"./sl\": 184,\n\t\"./sl.js\": 184,\n\t\"./sq\": 6361,\n\t\"./sq.js\": 6361,\n\t\"./sr\": 8965,\n\t\"./sr-cyrl\": 1287,\n\t\"./sr-cyrl.js\": 1287,\n\t\"./sr.js\": 8965,\n\t\"./ss\": 5456,\n\t\"./ss.js\": 5456,\n\t\"./sv\": 451,\n\t\"./sv.js\": 451,\n\t\"./sw\": 7558,\n\t\"./sw.js\": 7558,\n\t\"./ta\": 2702,\n\t\"./ta.js\": 2702,\n\t\"./te\": 3693,\n\t\"./te.js\": 3693,\n\t\"./tet\": 1243,\n\t\"./tet.js\": 1243,\n\t\"./tg\": 2500,\n\t\"./tg.js\": 2500,\n\t\"./th\": 5768,\n\t\"./th.js\": 5768,\n\t\"./tk\": 7761,\n\t\"./tk.js\": 7761,\n\t\"./tl-ph\": 5780,\n\t\"./tl-ph.js\": 5780,\n\t\"./tlh\": 9590,\n\t\"./tlh.js\": 9590,\n\t\"./tr\": 3807,\n\t\"./tr.js\": 3807,\n\t\"./tzl\": 3857,\n\t\"./tzl.js\": 3857,\n\t\"./tzm\": 654,\n\t\"./tzm-latn\": 8806,\n\t\"./tzm-latn.js\": 8806,\n\t\"./tzm.js\": 654,\n\t\"./ug-cn\": 845,\n\t\"./ug-cn.js\": 845,\n\t\"./uk\": 9232,\n\t\"./uk.js\": 9232,\n\t\"./ur\": 7052,\n\t\"./ur.js\": 7052,\n\t\"./uz\": 7967,\n\t\"./uz-latn\": 2233,\n\t\"./uz-latn.js\": 2233,\n\t\"./uz.js\": 7967,\n\t\"./vi\": 8615,\n\t\"./vi.js\": 8615,\n\t\"./x-pseudo\": 2320,\n\t\"./x-pseudo.js\": 2320,\n\t\"./yo\": 1313,\n\t\"./yo.js\": 1313,\n\t\"./zh-cn\": 4490,\n\t\"./zh-cn.js\": 4490,\n\t\"./zh-hk\": 5910,\n\t\"./zh-hk.js\": 5910,\n\t\"./zh-mo\": 8262,\n\t\"./zh-mo.js\": 8262,\n\t\"./zh-tw\": 4223,\n\t\"./zh-tw.js\": 4223\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6700;"],"names":[],"sourceRoot":"webpack:///"}